{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled1.ipynb",
      "provenance": [],
      "toc_visible": true,
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyNGNHeDKWBBrFJq9GjSnKBz",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "widgets": {
      "application/vnd.jupyter.widget-state+json": {
        "d70b10b1d05a4799a81b6d4cb9c33813": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_0cbddda1184a422aa609f37a04afb9b5",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_97756e6c83f04b36816f9f97d5feaaa5",
              "IPY_MODEL_c0adc4c0fcc44513b2efb8df62eb361d",
              "IPY_MODEL_32e9019efa854539891f7935110151a3"
            ]
          }
        },
        "0cbddda1184a422aa609f37a04afb9b5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "97756e6c83f04b36816f9f97d5feaaa5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_3a39ddb97b29433085ce37945381246e",
            "_dom_classes": [],
            "description": "vincita",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 30,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 5,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 0,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_06302006c541452fb3198d14b853391a"
          }
        },
        "c0adc4c0fcc44513b2efb8df62eb361d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ButtonView",
            "style": "IPY_MODEL_fd099d79d14d41d5b1a58d54175d1afa",
            "_dom_classes": [],
            "description": "Run Interact",
            "_model_name": "ButtonModel",
            "button_style": "",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "tooltip": "",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "layout": "IPY_MODEL_4c760902d8d04fc69463a9dc4c5e9cbb",
            "_model_module": "@jupyter-widgets/controls",
            "icon": ""
          }
        },
        "32e9019efa854539891f7935110151a3": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_df0e224319934ab4a29e58f7781fdd66",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "3a39ddb97b29433085ce37945381246e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "06302006c541452fb3198d14b853391a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "fd099d79d14d41d5b1a58d54175d1afa": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ButtonStyleModel",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "button_color": null,
            "font_weight": "",
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4c760902d8d04fc69463a9dc4c5e9cbb": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "df0e224319934ab4a29e58f7781fdd66": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c89090171cb847859c8e9fb0002c36bc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_57a2147ea0be4948988a6a0a82b01f06",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_771d658339a942db8fde5fee49a40286",
              "IPY_MODEL_74cf7de15a704c90bb83a09187f194e4",
              "IPY_MODEL_e7959629c4e846c5abf4fbc2e5154b4f",
              "IPY_MODEL_013c16425bf54a46bb830fb5c8b5e3c8"
            ]
          }
        },
        "57a2147ea0be4948988a6a0a82b01f06": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "771d658339a942db8fde5fee49a40286": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_c670a2b1ebce4458ad41b6a943f7d538",
            "_dom_classes": [],
            "description": "giocate",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 10,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 3,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 1,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_448df45f6c6e4b63be09c757c88dc827"
          }
        },
        "74cf7de15a704c90bb83a09187f194e4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_2dd0925a667f45e19f968d303a514368",
            "_dom_classes": [],
            "description": "puntata",
            "step": 5,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 100,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 10,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 5,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_c3a7688165ab4eca8f8682c684d91426"
          }
        },
        "e7959629c4e846c5abf4fbc2e5154b4f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ButtonView",
            "style": "IPY_MODEL_975d5610851242d692281a68a02c1598",
            "_dom_classes": [],
            "description": "Run Interact",
            "_model_name": "ButtonModel",
            "button_style": "",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "tooltip": "",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "layout": "IPY_MODEL_18ff87866aa54f8b9cc41fc047508a48",
            "_model_module": "@jupyter-widgets/controls",
            "icon": ""
          }
        },
        "013c16425bf54a46bb830fb5c8b5e3c8": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_1cc9e47d2d7e476093a6d5a5cba54bb1",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "c670a2b1ebce4458ad41b6a943f7d538": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "448df45f6c6e4b63be09c757c88dc827": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2dd0925a667f45e19f968d303a514368": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "c3a7688165ab4eca8f8682c684d91426": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "975d5610851242d692281a68a02c1598": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ButtonStyleModel",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "button_color": null,
            "font_weight": "",
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "18ff87866aa54f8b9cc41fc047508a48": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "1cc9e47d2d7e476093a6d5a5cba54bb1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e6ad47224471481fa6d0687852ff3d03": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_94bd3026f2f943a5a8dd1736b68f217d",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_beae43b1b7d842d096e87da255a39c14",
              "IPY_MODEL_117202bb355a4a989aae136f62ebfc7b",
              "IPY_MODEL_5eb91366f5314fbcb0f82da982b92c8a",
              "IPY_MODEL_b9be5f2798424b3fac820585bfbc3c01"
            ]
          }
        },
        "94bd3026f2f943a5a8dd1736b68f217d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "beae43b1b7d842d096e87da255a39c14": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_1d2586bf760d4b1b86d313f7d17ea304",
            "_dom_classes": [],
            "description": "giocate",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 6,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 3,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 1,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_641b8726d78d4252aadae3c015b76588"
          }
        },
        "117202bb355a4a989aae136f62ebfc7b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_84e66f7e005c4600b3b0c0d5167661f8",
            "_dom_classes": [],
            "description": "puntata",
            "step": 5,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 100,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 5,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 5,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b888bea0705d47309e749c1ac9fa0bff"
          }
        },
        "5eb91366f5314fbcb0f82da982b92c8a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ButtonView",
            "style": "IPY_MODEL_52eb4c3bbc9f416fbadfff5fa8b02337",
            "_dom_classes": [],
            "description": "Run Interact",
            "_model_name": "ButtonModel",
            "button_style": "",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "tooltip": "",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "layout": "IPY_MODEL_1eb0b3d21b6841c79af1e25c92e0810a",
            "_model_module": "@jupyter-widgets/controls",
            "icon": ""
          }
        },
        "b9be5f2798424b3fac820585bfbc3c01": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_30ddbdeb7fc549058ad1e124eca4a471",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "1d2586bf760d4b1b86d313f7d17ea304": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "641b8726d78d4252aadae3c015b76588": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "84e66f7e005c4600b3b0c0d5167661f8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b888bea0705d47309e749c1ac9fa0bff": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "52eb4c3bbc9f416fbadfff5fa8b02337": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ButtonStyleModel",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "button_color": null,
            "font_weight": "",
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1eb0b3d21b6841c79af1e25c92e0810a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "30ddbdeb7fc549058ad1e124eca4a471": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9ec3a6927a0c49b1b2a3bbf3dd51d30c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_96e3df2e46bd49a482c456493167a963",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_996481946f684d79a93b72e7a333bcd6",
              "IPY_MODEL_0025c3ed94864c2f840297044042a504",
              "IPY_MODEL_71f434f889e54641aa5dffd7878d3e8d"
            ]
          }
        },
        "96e3df2e46bd49a482c456493167a963": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "996481946f684d79a93b72e7a333bcd6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_08a76798f08649609f43b36f891010c3",
            "_dom_classes": [],
            "description": "estrazioni",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 10,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 3,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 1,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8e24324dd2aa48e0896a8c14929ada91"
          }
        },
        "0025c3ed94864c2f840297044042a504": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ButtonView",
            "style": "IPY_MODEL_c11ed0c253e84cfbae80e6ef7b281119",
            "_dom_classes": [],
            "description": "Run Interact",
            "_model_name": "ButtonModel",
            "button_style": "",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "tooltip": "",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "layout": "IPY_MODEL_858ee81b61784da7bd6d2e3fe83e2c94",
            "_model_module": "@jupyter-widgets/controls",
            "icon": ""
          }
        },
        "71f434f889e54641aa5dffd7878d3e8d": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_76fb04f0ad1c4e78845b009734401cad",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "08a76798f08649609f43b36f891010c3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8e24324dd2aa48e0896a8c14929ada91": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c11ed0c253e84cfbae80e6ef7b281119": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ButtonStyleModel",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "button_color": null,
            "font_weight": "",
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "858ee81b61784da7bd6d2e3fe83e2c94": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "76fb04f0ad1c4e78845b009734401cad": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5cd9c849393b46dca4c83b293b1df5bc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_d4abce6f2b0d43548eb4ba76faca2607",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_297651ba35354f9d822dca00471f630b",
              "IPY_MODEL_95f2b9f8404a4389af00cc3c80d0215f",
              "IPY_MODEL_789755eb6b76448980ac40d678497507",
              "IPY_MODEL_1f62b910738745d0b918513fbf93c46b"
            ]
          }
        },
        "d4abce6f2b0d43548eb4ba76faca2607": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "297651ba35354f9d822dca00471f630b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_a885252de07d48b6b5dac27b29e81ff6",
            "_dom_classes": [],
            "description": "bianche",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 5,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 2,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 1,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d9dee6e1afc04d2d98d2509c1337f919"
          }
        },
        "95f2b9f8404a4389af00cc3c80d0215f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_751871f71e7f4e2b9b96c706307e70c8",
            "_dom_classes": [],
            "description": "rosse",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 5,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 3,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 1,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6b763b4452e2438aaa0e70d94ddea5c8"
          }
        },
        "789755eb6b76448980ac40d678497507": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ButtonView",
            "style": "IPY_MODEL_3dfa1a90c5204fe5ac7b16173e177d75",
            "_dom_classes": [],
            "description": "Run Interact",
            "_model_name": "ButtonModel",
            "button_style": "",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "tooltip": "",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "layout": "IPY_MODEL_1b4114d877274d83ba48e21222a925df",
            "_model_module": "@jupyter-widgets/controls",
            "icon": ""
          }
        },
        "1f62b910738745d0b918513fbf93c46b": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_4464c5d0bc5f43499807309181a040b5",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "a885252de07d48b6b5dac27b29e81ff6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d9dee6e1afc04d2d98d2509c1337f919": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "751871f71e7f4e2b9b96c706307e70c8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6b763b4452e2438aaa0e70d94ddea5c8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3dfa1a90c5204fe5ac7b16173e177d75": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ButtonStyleModel",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "button_color": null,
            "font_weight": "",
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "1b4114d877274d83ba48e21222a925df": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "4464c5d0bc5f43499807309181a040b5": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b16064104c9c4529893e0c670dfeacc1": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_775714494a6b4efa81569bebacd82e47",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_dc714e5d07894e2e98f637f3223bc8dc",
              "IPY_MODEL_8a5e92ae4a1a4aedb6ae3644aac9574b",
              "IPY_MODEL_02bf888329c94c1a8485e6e8d438c7df",
              "IPY_MODEL_43fa7aba0395462b9fa61badc53c90ba"
            ]
          }
        },
        "775714494a6b4efa81569bebacd82e47": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dc714e5d07894e2e98f637f3223bc8dc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_d339d64fc56c41e3a9635dc8fcdfbeba",
            "_dom_classes": [],
            "description": "bianche",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 5,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 2,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 1,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_d662651f032f4b7685a2c21efde69e8c"
          }
        },
        "8a5e92ae4a1a4aedb6ae3644aac9574b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_c9dcafe83db04d0fb45d11fd722ccd9c",
            "_dom_classes": [],
            "description": "rosse",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 5,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 3,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 1,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_efe863a88342473ba6ed8c3f6b47ed25"
          }
        },
        "02bf888329c94c1a8485e6e8d438c7df": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ButtonView",
            "style": "IPY_MODEL_c7a4f8b8ac474a98a33e26f66612e18b",
            "_dom_classes": [],
            "description": "Run Interact",
            "_model_name": "ButtonModel",
            "button_style": "",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "tooltip": "",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "layout": "IPY_MODEL_b90be60454394f5f84a120b55e9a41e4",
            "_model_module": "@jupyter-widgets/controls",
            "icon": ""
          }
        },
        "43fa7aba0395462b9fa61badc53c90ba": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_853ae0d20475416484ae4ac7d497b663",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "d339d64fc56c41e3a9635dc8fcdfbeba": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d662651f032f4b7685a2c21efde69e8c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c9dcafe83db04d0fb45d11fd722ccd9c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "efe863a88342473ba6ed8c3f6b47ed25": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "c7a4f8b8ac474a98a33e26f66612e18b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ButtonStyleModel",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "button_color": null,
            "font_weight": "",
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b90be60454394f5f84a120b55e9a41e4": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "853ae0d20475416484ae4ac7d497b663": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "621594cb313e4de0b6ba4762ba6bdb3b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_4594945f071344a0aaaf5c20e82f34cf",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_5b989eb39ac04d2da3ffbc5b424d7217",
              "IPY_MODEL_2db3fd1e6a644986b842f8eb62a93c43",
              "IPY_MODEL_3282b8ecf91e4d11a4574e811bedbed7"
            ]
          }
        },
        "4594945f071344a0aaaf5c20e82f34cf": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5b989eb39ac04d2da3ffbc5b424d7217": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_d70df5aa55d24a50ab63957ba59213c4",
            "_dom_classes": [],
            "description": "tempo",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 20,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 10,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 1,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_4787eddb6e66466fb0ec49cb08172618"
          }
        },
        "2db3fd1e6a644986b842f8eb62a93c43": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ButtonView",
            "style": "IPY_MODEL_f254902c6e394ad4875c5eccdc6a7e55",
            "_dom_classes": [],
            "description": "Run Interact",
            "_model_name": "ButtonModel",
            "button_style": "",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "tooltip": "",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "layout": "IPY_MODEL_e61c2dea953146cdba885296112482f6",
            "_model_module": "@jupyter-widgets/controls",
            "icon": ""
          }
        },
        "3282b8ecf91e4d11a4574e811bedbed7": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_ef4a7bf5becc4713877e7c581c132856",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "d70df5aa55d24a50ab63957ba59213c4": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "4787eddb6e66466fb0ec49cb08172618": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f254902c6e394ad4875c5eccdc6a7e55": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ButtonStyleModel",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "button_color": null,
            "font_weight": "",
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e61c2dea953146cdba885296112482f6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ef4a7bf5becc4713877e7c581c132856": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "de083b68b9274b69a194d3edcc88a122": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_81944e13df8247bcadf8b5cea5af221a",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_95da5292bded46edb8a7592328a8c4e8",
              "IPY_MODEL_c3ec75e26016432b846c142d1177c054",
              "IPY_MODEL_cf0fbd2e318f40ce8750227f07ba3d30",
              "IPY_MODEL_2e373db39ad04519b40e3199cf02ae2c"
            ]
          }
        },
        "81944e13df8247bcadf8b5cea5af221a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "95da5292bded46edb8a7592328a8c4e8": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_df6b4e57eb4b42f19435c82f8530e66d",
            "_dom_classes": [],
            "description": "a",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 10,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 4,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 0,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_8514b881c1034637bac5d5c452f16f3d"
          }
        },
        "c3ec75e26016432b846c142d1177c054": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_3fa0590087394ad19d2eff2a29d55103",
            "_dom_classes": [],
            "description": "b",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 10,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 6,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 0,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_01ca3400da6a49439fea422e55497d88"
          }
        },
        "cf0fbd2e318f40ce8750227f07ba3d30": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ButtonView",
            "style": "IPY_MODEL_6960fa999ca04098873bc7443dc2a20e",
            "_dom_classes": [],
            "description": "Run Interact",
            "_model_name": "ButtonModel",
            "button_style": "",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "tooltip": "",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "layout": "IPY_MODEL_73631ba144ff41c2b0e2b6f9162df91a",
            "_model_module": "@jupyter-widgets/controls",
            "icon": ""
          }
        },
        "2e373db39ad04519b40e3199cf02ae2c": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_ac1fa75b102b45288fd6b0835fdb3e42",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "df6b4e57eb4b42f19435c82f8530e66d": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "8514b881c1034637bac5d5c452f16f3d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "3fa0590087394ad19d2eff2a29d55103": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "01ca3400da6a49439fea422e55497d88": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6960fa999ca04098873bc7443dc2a20e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ButtonStyleModel",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "button_color": null,
            "font_weight": "",
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "73631ba144ff41c2b0e2b6f9162df91a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ac1fa75b102b45288fd6b0835fdb3e42": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ba23929aab66493bba31479f2c9e45c5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_3c44bd67b4a14271bc4ee746dfd37d3c",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_dd3e885254984ee889c88dc06d7dcfb7",
              "IPY_MODEL_754d1579987a4ea4b24c467cf69e2e87",
              "IPY_MODEL_32cecd69a80d411288d1a1d2609a12e6"
            ]
          }
        },
        "3c44bd67b4a14271bc4ee746dfd37d3c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "dd3e885254984ee889c88dc06d7dcfb7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_d0691838260748338a97ab40e5aa5066",
            "_dom_classes": [],
            "description": "ore",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 72,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 3,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 0,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_b1f1030057c34f6cb522fefa3bac66a2"
          }
        },
        "754d1579987a4ea4b24c467cf69e2e87": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ButtonView",
            "style": "IPY_MODEL_8cfa600922a84cb8837dbbf174174211",
            "_dom_classes": [],
            "description": "Run Interact",
            "_model_name": "ButtonModel",
            "button_style": "",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "tooltip": "",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "layout": "IPY_MODEL_ea56761c23bc447a9ea143a2801e7fe0",
            "_model_module": "@jupyter-widgets/controls",
            "icon": ""
          }
        },
        "32cecd69a80d411288d1a1d2609a12e6": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_78055100663d4f098caa0ff207cf9c5b",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "d0691838260748338a97ab40e5aa5066": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "b1f1030057c34f6cb522fefa3bac66a2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "8cfa600922a84cb8837dbbf174174211": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ButtonStyleModel",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "button_color": null,
            "font_weight": "",
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "ea56761c23bc447a9ea143a2801e7fe0": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "78055100663d4f098caa0ff207cf9c5b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "306631d8a9c44d559977201470d7475e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_c1014ce42e704d29aff475d9aa418f0d",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_f5136a9464fd4411a8aac73afc8a8f40",
              "IPY_MODEL_ce30316309a04dcd8abe98e33cbf7736",
              "IPY_MODEL_e793e4d2ce6f48b0b7ce41807b584398"
            ]
          }
        },
        "c1014ce42e704d29aff475d9aa418f0d": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "f5136a9464fd4411a8aac73afc8a8f40": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_75633f24ff094269a1e2039e7dc8df71",
            "_dom_classes": [],
            "description": "λ",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 10,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 2,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 2,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_6f0c8302fff540e7a682b7db41e9f071"
          }
        },
        "ce30316309a04dcd8abe98e33cbf7736": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ButtonView",
            "style": "IPY_MODEL_b69d604e4ce748edb46a55f78f29810a",
            "_dom_classes": [],
            "description": "Run Interact",
            "_model_name": "ButtonModel",
            "button_style": "",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "tooltip": "",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "layout": "IPY_MODEL_d00dae849be9481283628189adce8666",
            "_model_module": "@jupyter-widgets/controls",
            "icon": ""
          }
        },
        "e793e4d2ce6f48b0b7ce41807b584398": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_a44be094fc0e433db7f6002d0a7ecfe1",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "75633f24ff094269a1e2039e7dc8df71": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "6f0c8302fff540e7a682b7db41e9f071": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "b69d604e4ce748edb46a55f78f29810a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ButtonStyleModel",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "button_color": null,
            "font_weight": "",
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "d00dae849be9481283628189adce8666": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a44be094fc0e433db7f6002d0a7ecfe1": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5b6b1c7b25cf4e52b99a2768bf3248bd": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_966b161212344c0cafb004dffc9eb368",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_6310c9d7be50470688eb67aaa71906d2",
              "IPY_MODEL_e72cc87bdd1d4687a6237bc4dece72e0",
              "IPY_MODEL_d220790c90a845fc813a4a63857c3708",
              "IPY_MODEL_26bdcbef465e4e70b8d6964959761097"
            ]
          }
        },
        "966b161212344c0cafb004dffc9eb368": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "6310c9d7be50470688eb67aaa71906d2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_a8190a73fa974e858f1f2b5907a8e882",
            "_dom_classes": [],
            "description": "ore",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 72,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 10,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 0,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_620a78ccc0744611b1ad3834f0dc1ecd"
          }
        },
        "e72cc87bdd1d4687a6237bc4dece72e0": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_fac492521ee04879b6ae003aa1d98168",
            "_dom_classes": [],
            "description": "λ",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 10,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 2,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 2,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_a427e1c349f74e3ebe015cac9f4be639"
          }
        },
        "d220790c90a845fc813a4a63857c3708": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ButtonView",
            "style": "IPY_MODEL_9f260e269f1b48e5bfacb5cbff8cb70f",
            "_dom_classes": [],
            "description": "Run Interact",
            "_model_name": "ButtonModel",
            "button_style": "",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "tooltip": "",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "layout": "IPY_MODEL_5a036c5c080945f5b0e462031ca78b62",
            "_model_module": "@jupyter-widgets/controls",
            "icon": ""
          }
        },
        "26bdcbef465e4e70b8d6964959761097": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_a71169563dcf4700b67c828ab88b8465",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "a8190a73fa974e858f1f2b5907a8e882": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "620a78ccc0744611b1ad3834f0dc1ecd": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "fac492521ee04879b6ae003aa1d98168": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "a427e1c349f74e3ebe015cac9f4be639": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "9f260e269f1b48e5bfacb5cbff8cb70f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ButtonStyleModel",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "button_color": null,
            "font_weight": "",
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5a036c5c080945f5b0e462031ca78b62": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "a71169563dcf4700b67c828ab88b8465": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ab666a98e236491b92bb4dca8401e7c5": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_d7fa3f2a19ca45689affdcd31365ac3b",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_7ff4761a04ff4f5cbbdec1bac1c4ac32",
              "IPY_MODEL_01d3b5d2bb6d440b80b56e9f8b140178",
              "IPY_MODEL_0280e4b7e34d43b4bc8916301beb179b",
              "IPY_MODEL_0f21792cef564d368ab04551338f7981"
            ]
          }
        },
        "d7fa3f2a19ca45689affdcd31365ac3b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "7ff4761a04ff4f5cbbdec1bac1c4ac32": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_e9f66e3e3c3a4be5b39dbc90b234edb6",
            "_dom_classes": [],
            "description": "t1",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 96,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 3,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 0,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_352728479bc94c66b4c24088cb275404"
          }
        },
        "01d3b5d2bb6d440b80b56e9f8b140178": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_0d054ecb847a4b51b2bf0c3f9042cd7a",
            "_dom_classes": [],
            "description": "t2",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 96,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 10,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 0,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_5a288e16eff84f5c908ff08390b0b7ec"
          }
        },
        "0280e4b7e34d43b4bc8916301beb179b": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ButtonView",
            "style": "IPY_MODEL_38209283f2544e0f975e6b888614bfd2",
            "_dom_classes": [],
            "description": "Run Interact",
            "_model_name": "ButtonModel",
            "button_style": "",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "tooltip": "",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "layout": "IPY_MODEL_2df160a0cdb542fa8a95b3ac6150f45e",
            "_model_module": "@jupyter-widgets/controls",
            "icon": ""
          }
        },
        "0f21792cef564d368ab04551338f7981": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_e7ef3467e4454d78905c007da91915d6",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "e9f66e3e3c3a4be5b39dbc90b234edb6": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "352728479bc94c66b4c24088cb275404": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "0d054ecb847a4b51b2bf0c3f9042cd7a": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "5a288e16eff84f5c908ff08390b0b7ec": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "38209283f2544e0f975e6b888614bfd2": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ButtonStyleModel",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "button_color": null,
            "font_weight": "",
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "2df160a0cdb542fa8a95b3ac6150f45e": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e7ef3467e4454d78905c007da91915d6": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "e45ff4c920b84f9faf36c47b11e60e7e": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_15697f4fe152424e82440b3cc862b165",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_fbf6fd4075b0434080367f3ab9c444fb",
              "IPY_MODEL_ea0ff469ff6c4926b238d58fe2dfd5ee",
              "IPY_MODEL_c98a9a8e6c25490e9d3d60ecfb02bff6"
            ]
          }
        },
        "15697f4fe152424e82440b3cc862b165": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "fbf6fd4075b0434080367f3ab9c444fb": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_33ce1d9fc8b34132917a88e3aaa75741",
            "_dom_classes": [],
            "description": "mean",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 5,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 0,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": -5,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_531ef4cc821f41cd99354948e12120e8"
          }
        },
        "ea0ff469ff6c4926b238d58fe2dfd5ee": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_bdf1353f1e2d425c9a73d9146f8c0e5c",
            "_dom_classes": [],
            "description": "std_dev",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 5,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 1,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e6fb2048a6f04220be50e79d6f00deb3"
          }
        },
        "c98a9a8e6c25490e9d3d60ecfb02bff6": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "image/png": "\n",
                  "text/plain": "<Figure size 432x288 with 1 Axes>"
                },
                "metadata": {
                  "needs_background": "light"
                }
              }
            ],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_ff79342caec54b20ae44941c44b8282a",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "33ce1d9fc8b34132917a88e3aaa75741": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "531ef4cc821f41cd99354948e12120e8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "bdf1353f1e2d425c9a73d9146f8c0e5c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e6fb2048a6f04220be50e79d6f00deb3": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "ff79342caec54b20ae44941c44b8282a": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "d5bcd8603d82471aa989352d5a0774b7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_10841fa5c2124c94bc8683d6eeaf5c24",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_15e1e524898445b088c13f2e4e97a33c",
              "IPY_MODEL_ee2ec0a9200f45e8bdbf2db386efa57c",
              "IPY_MODEL_387e7e29e0ac4e42bd7faa8083444d8e"
            ]
          }
        },
        "10841fa5c2124c94bc8683d6eeaf5c24": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "15e1e524898445b088c13f2e4e97a33c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_ac529579b73c4a56b292b13a00af2f4f",
            "_dom_classes": [],
            "description": "mean",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 5,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 0,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": -5,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_93bdb65b8d47456888a6325b35920a78"
          }
        },
        "ee2ec0a9200f45e8bdbf2db386efa57c": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "IntSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "IntSliderView",
            "style": "IPY_MODEL_017e62323faa48679b17f22a8e769ca3",
            "_dom_classes": [],
            "description": "std_dev",
            "step": 1,
            "_model_name": "IntSliderModel",
            "orientation": "horizontal",
            "max": 5,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": 1,
            "continuous_update": true,
            "readout_format": "d",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_74f47274ad734c51abb7223f91e34bef"
          }
        },
        "387e7e29e0ac4e42bd7faa8083444d8e": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [
              {
                "output_type": "display_data",
                "data": {
                  "image/png": "\n",
                  "text/plain": "<Figure size 432x288 with 1 Axes>"
                },
                "metadata": {
                  "needs_background": "light"
                }
              }
            ],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_51bb65120c63463e91523cfadfd18b4b",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "ac529579b73c4a56b292b13a00af2f4f": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "93bdb65b8d47456888a6325b35920a78": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "017e62323faa48679b17f22a8e769ca3": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "74f47274ad734c51abb7223f91e34bef": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "51bb65120c63463e91523cfadfd18b4b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "2ed9e4133ff94ad7b76897c492e10904": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_4fbe18ce717340ce844cc545046480f2",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_db074b92df9e48818794d1d6e30813bc",
              "IPY_MODEL_4cf9f2a7f9054d379db7806b8dd56d34",
              "IPY_MODEL_9e91892ebe414485b1db13b84db3fa09"
            ]
          }
        },
        "4fbe18ce717340ce844cc545046480f2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "db074b92df9e48818794d1d6e30813bc": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "FloatSliderModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "FloatSliderView",
            "style": "IPY_MODEL_a241bbf31d444d3b99435c4b1b2dc5be",
            "_dom_classes": [],
            "description": "valore",
            "step": 0.1,
            "_model_name": "FloatSliderModel",
            "orientation": "horizontal",
            "max": 4,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "value": 1,
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "min": -4,
            "continuous_update": true,
            "readout_format": ".2f",
            "description_tooltip": null,
            "readout": true,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_208c4b16b1d048ae9420bb098334b24c"
          }
        },
        "4cf9f2a7f9054d379db7806b8dd56d34": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ButtonView",
            "style": "IPY_MODEL_60c10cc7715a44318271b3d005ebe131",
            "_dom_classes": [],
            "description": "Run Interact",
            "_model_name": "ButtonModel",
            "button_style": "",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "tooltip": "",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "layout": "IPY_MODEL_92a39d3c0b044445b2337df6bb94aac8",
            "_model_module": "@jupyter-widgets/controls",
            "icon": ""
          }
        },
        "9e91892ebe414485b1db13b84db3fa09": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_20f68c1207db448aa2f35fe1a9b3aa4b",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "a241bbf31d444d3b99435c4b1b2dc5be": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "SliderStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "handle_color": null,
            "_model_name": "SliderStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "208c4b16b1d048ae9420bb098334b24c": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "60c10cc7715a44318271b3d005ebe131": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ButtonStyleModel",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "button_color": null,
            "font_weight": "",
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "92a39d3c0b044445b2337df6bb94aac8": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "20f68c1207db448aa2f35fe1a9b3aa4b": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "54e167c5d12a4520a982a09a93347301": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "VBoxModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "VBoxView",
            "_dom_classes": [
              "widget-interact"
            ],
            "_model_name": "VBoxModel",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.5.0",
            "box_style": "",
            "layout": "IPY_MODEL_4cda163dffa643e58d04b8ce26b22daa",
            "_model_module": "@jupyter-widgets/controls",
            "children": [
              "IPY_MODEL_daccd65253a4458cbab5b4757c18c226",
              "IPY_MODEL_dced52fecd75425ba8450daec6de4f59",
              "IPY_MODEL_5b6c161fb1c843bcaa1a206da2f278d0"
            ]
          }
        },
        "4cda163dffa643e58d04b8ce26b22daa": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "daccd65253a4458cbab5b4757c18c226": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DropdownModel",
          "model_module_version": "1.5.0",
          "state": {
            "_options_labels": [
              "S",
              "M",
              "L",
              "XL"
            ],
            "_view_name": "DropdownView",
            "style": "IPY_MODEL_534629ce43b144dcb3fe4a9e1d11cd82",
            "_dom_classes": [],
            "description": "taglia",
            "_model_name": "DropdownModel",
            "index": 2,
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "description_tooltip": null,
            "_model_module": "@jupyter-widgets/controls",
            "layout": "IPY_MODEL_e194c2a1bbfd4710994bc7e5be84a3d2"
          }
        },
        "dced52fecd75425ba8450daec6de4f59": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "ButtonView",
            "style": "IPY_MODEL_5f278ef471294d148ffa38483c34c1a7",
            "_dom_classes": [],
            "description": "Run Interact",
            "_model_name": "ButtonModel",
            "button_style": "",
            "_view_module": "@jupyter-widgets/controls",
            "_model_module_version": "1.5.0",
            "tooltip": "",
            "_view_count": null,
            "disabled": false,
            "_view_module_version": "1.5.0",
            "layout": "IPY_MODEL_06286d6a28f94de6b7a67fbdbbde5d08",
            "_model_module": "@jupyter-widgets/controls",
            "icon": ""
          }
        },
        "5b6c161fb1c843bcaa1a206da2f278d0": {
          "model_module": "@jupyter-widgets/output",
          "model_name": "OutputModel",
          "model_module_version": "1.0.0",
          "state": {
            "_view_name": "OutputView",
            "msg_id": "",
            "_dom_classes": [],
            "_model_name": "OutputModel",
            "outputs": [],
            "_view_module": "@jupyter-widgets/output",
            "_model_module_version": "1.0.0",
            "_view_count": null,
            "_view_module_version": "1.0.0",
            "layout": "IPY_MODEL_da56cf7aa2e5491ba2b3aced15b95d96",
            "_model_module": "@jupyter-widgets/output"
          }
        },
        "534629ce43b144dcb3fe4a9e1d11cd82": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "DescriptionStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "DescriptionStyleModel",
            "description_width": "",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "e194c2a1bbfd4710994bc7e5be84a3d2": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "5f278ef471294d148ffa38483c34c1a7": {
          "model_module": "@jupyter-widgets/controls",
          "model_name": "ButtonStyleModel",
          "model_module_version": "1.5.0",
          "state": {
            "_view_name": "StyleView",
            "_model_name": "ButtonStyleModel",
            "_view_module": "@jupyter-widgets/base",
            "_model_module_version": "1.5.0",
            "_view_count": null,
            "button_color": null,
            "font_weight": "",
            "_view_module_version": "1.2.0",
            "_model_module": "@jupyter-widgets/controls"
          }
        },
        "06286d6a28f94de6b7a67fbdbbde5d08": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        },
        "da56cf7aa2e5491ba2b3aced15b95d96": {
          "model_module": "@jupyter-widgets/base",
          "model_name": "LayoutModel",
          "model_module_version": "1.2.0",
          "state": {
            "_view_name": "LayoutView",
            "grid_template_rows": null,
            "right": null,
            "justify_content": null,
            "_view_module": "@jupyter-widgets/base",
            "overflow": null,
            "_model_module_version": "1.2.0",
            "_view_count": null,
            "flex_flow": null,
            "width": null,
            "min_width": null,
            "border": null,
            "align_items": null,
            "bottom": null,
            "_model_module": "@jupyter-widgets/base",
            "top": null,
            "grid_column": null,
            "overflow_y": null,
            "overflow_x": null,
            "grid_auto_flow": null,
            "grid_area": null,
            "grid_template_columns": null,
            "flex": null,
            "_model_name": "LayoutModel",
            "justify_items": null,
            "grid_row": null,
            "max_height": null,
            "align_content": null,
            "visibility": null,
            "align_self": null,
            "height": null,
            "min_height": null,
            "padding": null,
            "grid_auto_rows": null,
            "grid_gap": null,
            "max_width": null,
            "order": null,
            "_view_module_version": "1.2.0",
            "grid_template_areas": null,
            "object_position": null,
            "object_fit": null,
            "grid_auto_columns": null,
            "margin": null,
            "display": null,
            "left": null
          }
        }
      }
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/MontiMic/Tesi/blob/riordinato/PresentazioneMDP\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Introduzione\n",
        "La seguente presentazione si propone di semplificare l'apprendimento di alcuni principi del calcolo probabilistico offrendo la possibilità di vedere applicare le leggi su grandi numeri e confrontando i risultati ottenuti con quelli attesi dalla teoria."
      ],
      "metadata": {
        "id": "yyLelI9l5lbc"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Di seguito includiamo le librerie che verranno utilizzate nel corso della presentazione:\n",
        "\n",
        "* **numpy** per la manipolazione dei dati\n",
        "\n",
        "* **interact** per rendere la presentazione interattiva offrendo la possibilità allo studente di scegliere gli input\n",
        "\n",
        "* **pyplot** per la rappresentazione grafica dei risultati"
      ],
      "metadata": {
        "id": "35yCw13F7Yam"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "id": "TAxUPZupC-qR"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "from ipywidgets import interact, interact_manual\n",
        "from matplotlib import pyplot as plt\n",
        "import math\n",
        "import seaborn as sns\n",
        "import random\n",
        "import scipy.stats\n",
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Elementi di python"
      ],
      "metadata": {
        "id": "XN5Whz1Y9fiZ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Questa sezione è rivolta unicamente a chi non avesse ancora mai visto il python, allo scopo di mostrare alcune pratiche peculiari a Python."
      ],
      "metadata": {
        "id": "yHNFMDrk9pHX"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "La funzione np.zeros(n) restituisce un array di zeri lungo n"
      ],
      "metadata": {
        "id": "kXZd8nfHDkHj"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "np.zeros(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Pukdrzg7-ggY",
        "outputId": "a5d90d0e-2f24-4f28-b749-51841e30d8ba"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0., 0., 0., 0., 0.])"
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Specificando anche il type booleano facciamo una conversione: \n",
        "\n",
        "*  Gli zeri diventano False\n",
        "\n",
        "* I valori diversi da zero diventano True"
      ],
      "metadata": {
        "id": "VyLCyWeYDvuh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "esempio = np.zeros(10, dtype=np.bool_)\n",
        "print(esempio)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lO-15LDEDZEP",
        "outputId": "e2266a00-10d9-4b42-c6a7-dc1a2f630bb4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[False False False False False False False False False False]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Useremo questo tipo di struttura dati per simulare praticamente tutto, dalla roulette (True = rosso, False = nero) ad un urna di palline (quando ci basteranno 2 soli colori delle palline)"
      ],
      "metadata": {
        "id": "t-fqP7KSEIUu"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Per modificare un array il python ci offre uno strumento molto potente: lo slicing. Questa funzionalità permette di intervenire su un qualunque sottoinsieme dell'array se usata correttamente. A noi basta sapere che in un caso come esempio[1:5:2], stiamo intervenendo sull'array esempio, prendendo gli elementi dalla posizione 1 (inclusa) alla posizione 5 (esclusa) con passo 2:"
      ],
      "metadata": {
        "id": "OEyj-K9iEeQa"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "esempio = ['a', 'b', 'c', 'd', 'e']\n",
        "esempio[1:5:2]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "48oF9noGF3Np",
        "outputId": "aaa296a0-5974-459c-e9e2-42c8d7435b9b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['b', 'd']"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Non specificare il primo parametro significa partire dall'elemento 0, omettere il secondo significa procedere fino all'ultimo (compreso) e non specificare il passo significa passo 1: non saltare nessun elemento."
      ],
      "metadata": {
        "id": "Rm-4oAaOGvIL"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "La funzione range(n) restituisce un iterabile lungo n. In python è generalmente usata nel ciclo for."
      ],
      "metadata": {
        "id": "b6PzabLwIH1d"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "for i in range(5):\n",
        "  print(i)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fdFx5oZPIaf5",
        "outputId": "112e04ab-417c-494a-ecf1-46679d97f49e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0\n",
            "1\n",
            "2\n",
            "3\n",
            "4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Funzioni utili"
      ],
      "metadata": {
        "id": "UdZaaBfKzjzX"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Quelle che seguono sono funzioni utilizzate in più test del documento, per il corretto funzionamento dei test successivi è necessario eseguire queste celle una volta."
      ],
      "metadata": {
        "id": "iZFqSjhypj_Y"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#funzione che genera una roulette simulata da un array lungo 37 di cui 18 valori contano come \"vittoria\"\n",
        "def mk_roulette():\n",
        "  ruota = np.zeros(37, dtype=np.bool_)\n",
        "  ruota[1::2] = True\n",
        "  return ruota"
      ],
      "metadata": {
        "id": "4LJOZHxd810N"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#funzione che simula una singola partita alla roulette (1 o più puntate uguali) e, dato il portafogli di partenza, torno il nuovo conto\n",
        "def partita(ruota, giocate, puntata, portafogli):\n",
        "  while(giocate > 0):\n",
        "      giocate = giocate - 1\n",
        "      portafogli = portafogli - puntata #la puntata la considero sempre persa, in caso di vittoria vinco il doppio della puntata\n",
        "      if(ruota[np.random.randint(0, (37))]): #estraggo un elemento casuale della roulette e verifico se è rosso\n",
        "        portafogli = portafogli + (puntata * 2)\n",
        "  return portafogli  "
      ],
      "metadata": {
        "id": "fqGFfq_CT7Tv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#funzione che simula un dado ritornando un intero compreso tra 1 e 6\n",
        "def trow():\n",
        "  return np.random.randint(1, 7)"
      ],
      "metadata": {
        "id": "O7NiHEewS99d"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#funzione che ritorna un'urna contenente palline di 2 colori in quanità scelta\n",
        "def mk_urna(bianche, rosse):\n",
        "  tot = bianche + rosse\n",
        "  urna = np.zeros((tot, 1), dtype=np.bool_)\n",
        "  while(rosse > 0):\n",
        "    rnd = np.random.randint(0, (tot))\n",
        "    if (not urna[rnd]):\n",
        "      urna[rnd] = True\n",
        "      rosse = rosse - 1\n",
        "  return urna"
      ],
      "metadata": {
        "id": "R06bqIr8Ii4G"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Interpretazione dei risultati"
      ],
      "metadata": {
        "id": "EbFr-wXap_mS"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "I test di questo documento hanno lo scopo di mostrare che le formule viste con la teoria del calcolo probabilistico hanno un riscontro nella realtà. \n",
        "Ogni test simulerà per un numero di volte a discrezione dello studente, lo scenario descritto dall'esempio in esame. Si noti che un numero più alto di ripetizioni porterà a risultati più precisi."
      ],
      "metadata": {
        "id": "Mp5-2IqZqDex"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def moneta(lanci):\n",
        "  results = []\n",
        "  for i in range(lanci): #lanciamo la moneta tante volte quante indicate dal parametro \"lanci\"\n",
        "    results.append(np.random.randint(2))\n",
        "  #grafico\n",
        "  labels = []\n",
        "  normalized = []\n",
        "  normalized.append(round(((results.count(0) / lanci) * 100), 2)) #conto le istanze dei risultati e le normalizzo\n",
        "  normalized.append(round(100 - sum(normalized), 2)) #per evitare che per errori di arrotondamento la somma dei risultati sia 99.9%, l'ultimo risultato lo calcolo come 100 - (la somma dei precedenti)\n",
        "  for i in range(len(normalized)):\n",
        "    labels.append(str(normalized[i]) + \"%\") # aggiungo le labels (i valori riportati all'esterno del grafico)\n",
        "  plt.pie(normalized, labels=labels)\n",
        "  legenda = [\"Testa\", \"Croce\"]\n",
        "  plt.legend(legenda,loc='upper center', bbox_to_anchor=(0.5, -0.05), fancybox=True, shadow=True, ncol=5)"
      ],
      "metadata": {
        "id": "pZxUQQ-_rGuz"
      },
      "execution_count": 9,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "moneta(100)"
      ],
      "metadata": {
        "id": "7rynuIn1ubs4",
        "outputId": "0350bd39-2f9b-47c0-9b07-ea07313e31de",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        }
      },
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "moneta(10_000)"
      ],
      "metadata": {
        "id": "E6dWQdxUud7o",
        "outputId": "9b4c7dfc-caa8-46bd-82b7-c74c4830f7d0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        }
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "moneta(1_000_000)"
      ],
      "metadata": {
        "id": "uNmo8_dXugoY",
        "outputId": "10b74f97-004b-4ec8-866d-5629e48f82c0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Per un buon equilibrio tra accuratezza dei risultati e tempo di esecuzione impostiamo il numero di ripetizioni a 100 000 con la variabile \"precisione\"."
      ],
      "metadata": {
        "id": "0_jUagMkw72N"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "precisione = 100_000"
      ],
      "metadata": {
        "id": "7YqOeAMoxunS"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Si lascia allo studente la possibilità di incrementare questa variabile se desiderasse dei risultati più precisi."
      ],
      "metadata": {
        "id": "uH7_BXdBxvvq"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Variabili aleatorie discrete"
      ],
      "metadata": {
        "id": "gQTrf-PK7FxE"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Una variabile aleatoria _X_ si dice discreta se i valori che assume sono finiti oppure numerabili.\n",
        "\n",
        "Nel caso siano numerabili molto spesso potremo pensare che siano semplicmente i numeri interi, ma non vogliamo escludere anche casi in cui abbiamo dei valori non interi."
      ],
      "metadata": {
        "id": "f7tQYrZgLgm2"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Esempio 1.1 \n",
        "Faccio 3 puntate sul rosso alla roulette puntando 10 euro per volta, qual è la probabilità di vincere più di un certo valore _X_?\n",
        "\n",
        "(Le vincite possibili sono valori finiti ed è quindi una variabile discreta)"
      ],
      "metadata": {
        "id": "wO2wYqZ-DSZF"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "@interact_manual(vincita=(0, 30))\n",
        "def es11(vincita=5):\n",
        "  giocate = 3\n",
        "  puntata = 10\n",
        "  ruota = mk_roulette()\n",
        "  count = 0\n",
        "  for i in range(precisione):\n",
        "    portafogli = giocate * puntata\n",
        "    portafogli = partita(ruota, giocate, puntata, portafogli) #il portafogli viene aggiornato dopo aver simulato una partita\n",
        "    if((portafogli - (giocate*puntata)) >= vincita): #se ho finito le 3 puntate con una vincita maggiore o uguale a quella sperata la aggiungo al conteggio\n",
        "      count = count + 1\n",
        "  return round(count / precisione, 3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81,
          "referenced_widgets": [
            "d70b10b1d05a4799a81b6d4cb9c33813",
            "0cbddda1184a422aa609f37a04afb9b5",
            "97756e6c83f04b36816f9f97d5feaaa5",
            "c0adc4c0fcc44513b2efb8df62eb361d",
            "32e9019efa854539891f7935110151a3",
            "3a39ddb97b29433085ce37945381246e",
            "06302006c541452fb3198d14b853391a",
            "fd099d79d14d41d5b1a58d54175d1afa",
            "4c760902d8d04fc69463a9dc4c5e9cbb",
            "df0e224319934ab4a29e58f7781fdd66"
          ]
        },
        "id": "w2ugmhMy_cfa",
        "outputId": "fa96fc3a-8dc8-4ab8-e010-d7a6e8ed178e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "d70b10b1d05a4799a81b6d4cb9c33813",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(IntSlider(value=5, description='vincita', max=30), Button(description='Run Interact', st…"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Esempio 1.2\n",
        "Dati il numero di puntate ed i soldi scommessi ogni volta, quanto mi dovrei aspettare di aver vinto alla fine? (risultato in euro)"
      ],
      "metadata": {
        "id": "tTOcRD2kD_zf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "@interact_manual(giocate=(1, 10), puntata=(5, 100, 5))\n",
        "def es12(giocate = 3, puntata = 10):\n",
        "  portafogli = giocate * puntata * precisione\n",
        "  ruota = mk_roulette()\n",
        "  for i in range(precisione):\n",
        "    portafogli = partita(ruota, giocate, puntata, portafogli)\n",
        "  portafogli = portafogli / precisione\n",
        "  return round(portafogli - (giocate * puntata), 2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 113,
          "referenced_widgets": [
            "c89090171cb847859c8e9fb0002c36bc",
            "57a2147ea0be4948988a6a0a82b01f06",
            "771d658339a942db8fde5fee49a40286",
            "74cf7de15a704c90bb83a09187f194e4",
            "e7959629c4e846c5abf4fbc2e5154b4f",
            "013c16425bf54a46bb830fb5c8b5e3c8",
            "c670a2b1ebce4458ad41b6a943f7d538",
            "448df45f6c6e4b63be09c757c88dc827",
            "2dd0925a667f45e19f968d303a514368",
            "c3a7688165ab4eca8f8682c684d91426",
            "975d5610851242d692281a68a02c1598",
            "18ff87866aa54f8b9cc41fc047508a48",
            "1cc9e47d2d7e476093a6d5a5cba54bb1"
          ]
        },
        "id": "TR8QkEnHD-B2",
        "outputId": "210b5bd6-7df3-44a1-cd84-805f15e12c63"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "c89090171cb847859c8e9fb0002c36bc",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(IntSlider(value=3, description='giocate', max=10, min=1), IntSlider(value=10, descriptio…"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Distribuzione uniforme e non uniforme"
      ],
      "metadata": {
        "id": "qBnKgfwaLT9x"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Sia _A_ = {_x1_, . . . , _xn_}; una variabile _X_ che assume i valori in _A_ tutti con la stessa probabilità $\\frac{1}{n}$\n",
        "si dice _variabile uniforme_ su _A_. Scriviamo in questo caso _X_ ∼ _U_(_A_) oppure _X_ ∼ _U_(_x1_, . . . , _xn_).\n",
        "La densità è quindi:\n",
        "\n",
        "\\begin{equation}\n",
        "  px(h) =\n",
        "    \\begin{cases}\n",
        "           \\frac{1}{n} \\ se \\  h  \\ ∈ \\ ({x1}, {x2}, ..., {xn})\n",
        "          \\\\\n",
        "          0 \\ altrimenti\n",
        "        \\end{cases}\n",
        "\\end{equation}"
      ],
      "metadata": {
        "id": "GUQzPwZ8NK0Q"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Esempio 2.1 \n",
        "Nel lancio di un dado sia Ω = {1, 2, 3, 4, 5, 6} l’insieme dei possibili risultati.\n",
        "Allora la funzione _X_(_n_) = n per ogni n ∈ Ω è una variabile aleatoria uniforme _X_ ∼ _U_(1, 2, 3, 4, 5, 6).\n"
      ],
      "metadata": {
        "id": "HJrqw0EbXj2l"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def es21():\n",
        "  results = []\n",
        "  for i in range(precisione):\n",
        "    results.append(trow()) #aggiungo il risultato del tiro alla lista dei risultati\n",
        "  #grafico\n",
        "  elem_count = []\n",
        "  labels = []\n",
        "  for i in range(len(set(results))): #conto le istanze di ogni risultato ottenuto ed aggiungo i totali a elem_count, poi lo metto a grafico\n",
        "    elem_count.append(results.count(i+1))\n",
        "    labels.append(str(i+1))\n",
        "  plt.bar(labels, elem_count)\n",
        "es21()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 265
        },
        "id": "pO1ExmtATCeI",
        "outputId": "f3eead9f-ac3e-44f8-bb76-85725c918e9b"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Esempio 2.2\n",
        "Se invece lanciassimo due dadi, la variabile _X_ che assume un valore corrispondente al numero di risultati pari ottenuti dal lancio sarebbe una _variabile non uniforme_ siccome la sua densità sarebbe:\n",
        "\n",
        "\\begin{equation}\n",
        "  py(h) =\n",
        "    \\begin{cases}\n",
        "          \\frac{1}{4} \\  h={0},{2}\n",
        "          \\\\\n",
        "          \\frac{1}{2} \\ h={1}\n",
        "          \\\\\n",
        "          0 \\ altrimenti\n",
        "        \\end{cases}\n",
        "\\end{equation}"
      ],
      "metadata": {
        "id": "BZUNA1OvaQp6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def es22():\n",
        "  results = []\n",
        "  for i in range(precisione):\n",
        "    a, b = trow(), trow() #lancio due dadi, poi conterò quanti sono pari per aggiungere il risultato alla lista\n",
        "    results.append(2-((a % 2)+(b % 2))) #conto i dadi pari come due meno i dadi dispari (n%2 = 1 per n dispari, 0 altrimenti)\n",
        "  valori = []\n",
        "  normalized = []\n",
        "  for i in range(3): #conto le istanze dei risultati e le divido per il numero di risultati totale (normalizzo)\n",
        "    normalized.append(results.count(i) / len(results)) #len(results) torna la lunghezza della lista results\n",
        "    valori.append(\"k=\" + str(i))\n",
        "  plt.pie(normalized, labels=valori)\n",
        "es22()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 248
        },
        "id": "Ly_UKZkxZr2J",
        "outputId": "1861f8f8-7f99-4f8f-c3ad-a2cf11322672"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Densità binomiale"
      ],
      "metadata": {
        "id": "qimeQspadWgq"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Consideriamo un fenomeno aleatorio e un certo evento ad esso associato. Per semplicità diciamo che se l’evento si realizza otteniamo un “successo”, viceversa che abbiamo ottenuto un “insuccesso\".\n",
        "Uno schema successo-insuccesso consiste nel ripetere questo fenomeno un certo fissato numero di volte, dette anche prove o tentativi, in cui siamo interessati unicamente al numero di successi ottenuti\n",
        "nelle varie prove.\n",
        "Supponiamo ora che le prove siano indipendenti l’una dall’altra, cioè vengono effettuate tuttevnelle medesime condizioni, indipendentemente dal risultato delle prove precedenti: parliamo in questo caso di schema successo-insuccesso con ripetizione o a prove indipendenti. Consideriamo\n",
        "quindi la variabile X data dal numero di successi in n tentativi.\n",
        "Nel caso in cui le prove siano indipendenti l’una dall’altra, la probabilità di ottenere una certa prefissata sequenza di successi e insuccessi dipende solo dal numero di questi ultimi e non dall’ordine con cui vogliamo che si succedano. La probabilità di ottenere una sequenza fissata in cui abbiamo k successi e n − k insuccessi è data da\n",
        "$p^k(1-p)^{n-k}$, dove p è la probabilità che ogni singolo tentativo abbia successo. Siccome i modi in cui possiamo scegliere le k posizioni per i successi sono date da ${n\\choose k}$ otteniamo per la variabile X la densità data da\n",
        "\n",
        "\\begin{equation}\n",
        "  px(k) =\n",
        "    \\begin{cases}\n",
        "          {n\\choose k} p^k(1-p)^{n-k} \\ se \\ k=1,2,...,n\n",
        "          \\\\\n",
        "          0 \\ altrimenti\n",
        "        \\end{cases}\n",
        "\\end{equation}\n",
        "\n",
        "\n",
        "Scriveremo in questo caso _X_ ∼ _B_(_n_, _p_) e diciamo che _X_ è una variabile binomiale."
      ],
      "metadata": {
        "id": "OUh7jiOk7WSD"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Esempio 3.1\n",
        "\n",
        "Supponiamo di andare al casinò con 15 Euro e puntiamo 3 volte 5 Euro alla roulette sul rosso. Consideriamo la variabile aleatoria X data dai soldi che abbiamo in tasca alla fine delle 3 puntate. La probabilità di ottenere un numero rosso è di $\\frac{18}{37}$ ad ogni tentativo.\n",
        "Determinare la densità di X.\n",
        "La variabile X può assumere i valori 30, 20, 10, 0 a seconda di quanti rossi sono usciti. Abbiamo:\n",
        "\n",
        "P(X = 30) = $(\\frac{18}{37})^3$ = 0,115\n",
        "\n",
        "P(X = 20) = ${3\\choose 1}(\\frac{18}{37})^2 · \\frac{19}{37}$= 0, 365\n",
        "\n",
        "P(X = 10) = ${3\\choose 2}(\\frac{18}{37}) · (\\frac{19}{37})^2$ = 0,385\n",
        "\n",
        "P(X = 0) = $(\\frac{19}{37})^3$ = 0,135\n"
      ],
      "metadata": {
        "id": "O8PjzahWhrRr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "@interact_manual(giocate=(1, 6), puntata=(5, 100, 5))\n",
        "def es31(giocate = 3, puntata = 5):\n",
        "  ruota = mk_roulette()\n",
        "  results = []\n",
        "  for i in range(precisione):\n",
        "    portafogli = giocate * puntata\n",
        "    portafogli = partita(ruota, giocate, puntata, portafogli)\n",
        "    results.append(portafogli)\n",
        "  #grafico\n",
        "  normalized = []\n",
        "  valori = []\n",
        "  for i in range(giocate):\n",
        "    normalized.append(round(((results.count(puntata*2*i) / precisione) * 100), 2)) #conto le istanze dei risultati e le normalizzo\n",
        "  normalized.append(round(100 - sum(normalized), 2)) #per evitare che per errori di arrotondamento la somma dei risultati sia 99.9%, l'ultimo risultato lo calcolo come 100 - (la somma dei precedenti)\n",
        "  labels = []\n",
        "  for i in range(len(normalized)):\n",
        "    labels.append(str(normalized[i]) + \"%\") # aggiungo le labels (i valori riportati all'esterno del grafico)\n",
        "  plt.pie(normalized, labels=labels)\n",
        "  legenda = []\n",
        "  for i in range(len(normalized)):\n",
        "    legenda.append(str(puntata*2*i))\n",
        "  plt.legend(legenda,loc='upper center', bbox_to_anchor=(0.5, -0.05), fancybox=True, shadow=True, ncol=5)"
      ],
      "metadata": {
        "id": "QDB96jXivO40",
        "outputId": "ffb3df0d-02e0-4a4d-936f-2f271c740802",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 113,
          "referenced_widgets": [
            "e6ad47224471481fa6d0687852ff3d03",
            "94bd3026f2f943a5a8dd1736b68f217d",
            "beae43b1b7d842d096e87da255a39c14",
            "117202bb355a4a989aae136f62ebfc7b",
            "5eb91366f5314fbcb0f82da982b92c8a",
            "b9be5f2798424b3fac820585bfbc3c01",
            "1d2586bf760d4b1b86d313f7d17ea304",
            "641b8726d78d4252aadae3c015b76588",
            "84e66f7e005c4600b3b0c0d5167661f8",
            "b888bea0705d47309e749c1ac9fa0bff",
            "52eb4c3bbc9f416fbadfff5fa8b02337",
            "1eb0b3d21b6841c79af1e25c92e0810a",
            "30ddbdeb7fc549058ad1e124eca4a471"
          ]
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e6ad47224471481fa6d0687852ff3d03",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(IntSlider(value=3, description='giocate', max=6, min=1), IntSlider(value=5, description=…"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Densità ipergeometrica"
      ],
      "metadata": {
        "id": "9PjQr8MmCUYu"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "Un altro tipo di schema successo-insuccesso è il cosiddetto schema successo-insuccesso _senza ripetizione_. In questo caso il fenomeno aleatorio consiste nell’estrazione di n palline, senza rimpiazzare di volta in volta la pallina estratta, da un'urna contenente b palline bianche e r palline rosse.\n",
        "Diciamo che la prova (estrazione) dà successo se viene estratta una pallina bianca e consideriamo la variabile X data dal numero di successi ottenuti, cioè dal numero di palline bianche estratte.\n",
        "\n",
        "\n",
        "Osserviamo che X può assumere tutti i valori tra max(0, n − r) e min(n, b): infatti se n > r siamo sicuri di pescare almeno n−r palline bianche e chiaramente il numero di bianche estratte non può superare nè il numero estrazioni nè il numero di palline bianche.\n",
        "\n",
        "Lo spazio Ω è dato da tutti i possibili sottoinsiemi di n oggetti (le palline estratte) scelti da un insieme di b + r oggetti (le palline\n",
        "disponibili), con probabilità uniforme. L’evento “X = k” è dato quindi da tutti i sottoinsiemi delle b + r palline costituiti da k palline bianche e n − k palline rosse. Le k bianche le posso scegliere in ${b\\choose k}$ modi. Le n − k rosse in ${r \\choose {n - k}}$ modi. Abbiamo quindi che la densità di X è data da\n",
        "\n",
        "\\begin{equation}\n",
        "  px(k) =\n",
        "    \\begin{cases}\n",
        "          \\frac{{b \\choose k} · {r \\choose n - k}}{b + r \\choose n} \\ se \\ k=max(0, n-r),...,min(n,b)\n",
        "          \\\\\n",
        "          0 \\ altrimenti\n",
        "        \\end{cases}\n",
        "\\end{equation}\n",
        "\n",
        "Scriviamo in questo caso X ∼ H(n; b, r) e diciamo che X è una variabile ipergeometrica."
      ],
      "metadata": {
        "id": "OnLdbdQjCbyl"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Esempio 4.1\n",
        "Un’urna contiene 8 palline bianche e 2 rosse. Ne estraiamo 3 senza rimpiazzo.\n",
        "Qual è la probabilità di estrarne al più una rossa? In questo caso, a differenza del precedente abbiamo che la variabile X = numero di rosse estratte è una ipergeometrica X ∼ H(3; 2, 8) per\n",
        "cui\n",
        "\n",
        "P(_X_ ≤ 1) = P(_X_ = 0) + P(_X_ = 1) = $\\frac{{2 \\choose 0}·{8 \\choose 3}}{10 \\choose 3}$ + $\\frac{{2 \\choose 1}·{8 \\choose 2}}{10 \\choose 3}$ = $\\frac{14}{15}$ = 0.933"
      ],
      "metadata": {
        "id": "mqqc2UiZGaIY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "@interact_manual(estrazioni=(1, 10))\n",
        "def es41(estrazioni=3):\n",
        "  bianche = 8\n",
        "  rosse = 2\n",
        "  urna = mk_urna(bianche, rosse)\n",
        "  results = 0\n",
        "  for i in range(precisione):\n",
        "    tmp = urna\n",
        "    count = 0\n",
        "    for i in range(estrazioni):\n",
        "      extr = np.random.randint(0, ((bianche + rosse)-i))\n",
        "      if(tmp[extr]):\n",
        "        count = count + 1\n",
        "      tmp = np.delete(tmp, extr)\n",
        "    if(count < 2):\n",
        "      results = results + 1  \n",
        "  return round(results / precisione, 3)"
      ],
      "metadata": {
        "id": "R0SjK_tkMtDv",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81,
          "referenced_widgets": [
            "9ec3a6927a0c49b1b2a3bbf3dd51d30c",
            "96e3df2e46bd49a482c456493167a963",
            "996481946f684d79a93b72e7a333bcd6",
            "0025c3ed94864c2f840297044042a504",
            "71f434f889e54641aa5dffd7878d3e8d",
            "08a76798f08649609f43b36f891010c3",
            "8e24324dd2aa48e0896a8c14929ada91",
            "c11ed0c253e84cfbae80e6ef7b281119",
            "858ee81b61784da7bd6d2e3fe83e2c94",
            "76fb04f0ad1c4e78845b009734401cad"
          ]
        },
        "outputId": "6c58e68f-add2-4980-ba7e-753aeb0ba6b4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "9ec3a6927a0c49b1b2a3bbf3dd51d30c",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(IntSlider(value=3, description='estrazioni', max=10, min=1), Button(description='Run Int…"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Densità geometrica - geometrica modificata"
      ],
      "metadata": {
        "id": "-GtoecXjUH1e"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "In uno schema successo-insuccesso, anzichè al numero di successi ottenuti su n tentativi, potremmo essere interessati al numero di tentativi che devo effettuare prima di ottenere un successo."
      ],
      "metadata": {
        "id": "YBirGuNoUKbB"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Esempio 5.1\n",
        "\n",
        "Consideriamo un’urna con 2 palline bianche e 3 rosse. Le estraggo senza\n",
        "rimpiazzo finchè non trovo una pallina rossa. Considero la variabile aleatoria X=numero di estrazioni per trovare una pallina rossa. X è una variabile finita in quanto assume solo i valori 1, 2, 3.\n",
        "La sua densità si determina facilmente ed è data da\n",
        "\n",
        "\\begin{equation}\n",
        "  px(k) =\n",
        "    \\begin{cases}\n",
        "          \\frac{6}{10} \\ se \\ k=1\n",
        "          \\\\\n",
        "          \\frac{3}{10} \\ se \\ k=2\n",
        "          \\\\\n",
        "          \\frac{1}{10} \\ se \\ k=3\n",
        "          \\\\\n",
        "          0 \\ altrimenti\n",
        "        \\end{cases}\n",
        "\\end{equation}\n",
        "\n"
      ],
      "metadata": {
        "id": "aXX1PJQLUX9Z"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "@interact_manual(bianche=(1,5), rosse=(1, 5))\n",
        "def es51(bianche=2, rosse=3):\n",
        "  palle = mk_urna(bianche, rosse)\n",
        "  results = []\n",
        "  count=0\n",
        "  while(len(results) < precisione):\n",
        "    done = len(results)\n",
        "    tmp = palle\n",
        "    while(len(results) == done):\n",
        "      extr = np.random.randint(0, ((bianche+rosse)-count))\n",
        "      if(tmp[extr]):\n",
        "        results.append(count)\n",
        "        count=0\n",
        "      else:  \n",
        "        tmp = np.delete(tmp,extr)\n",
        "        count = count + 1\n",
        "  #grafico\n",
        "  labels = []\n",
        "  normalized = []\n",
        "  for i in range(len(set(results)) - 1): #len(set(n)) torna il numero di risultati distinti presenti in results\n",
        "    normalized.append(round(((results.count(i) / precisione) * 100), 2)) #conto le istanze dei risultati e le normalizzo\n",
        "  normalized.append(round(100 - sum(normalized), 2)) #per evitare che per errori di arrotondamento la somma dei risultati sia 99.9%, l'ultimo risultato lo calcolo come 100 - (la somma dei precedenti)\n",
        "  for i in range(len(normalized)):\n",
        "    labels.append(str(normalized[i]) + \"%\") # aggiungo le labels (i valori riportati all'esterno del grafico)\n",
        "  plt.pie(normalized, labels=labels)\n",
        "  legenda = []\n",
        "  for i in range(bianche + 1):\n",
        "    legenda.append(\"k=\"+str(i+1))\n",
        "  plt.legend(legenda,loc='upper center', bbox_to_anchor=(0.5, -0.05), fancybox=True, shadow=True, ncol=5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 113,
          "referenced_widgets": [
            "5cd9c849393b46dca4c83b293b1df5bc",
            "d4abce6f2b0d43548eb4ba76faca2607",
            "297651ba35354f9d822dca00471f630b",
            "95f2b9f8404a4389af00cc3c80d0215f",
            "789755eb6b76448980ac40d678497507",
            "1f62b910738745d0b918513fbf93c46b",
            "a885252de07d48b6b5dac27b29e81ff6",
            "d9dee6e1afc04d2d98d2509c1337f919",
            "751871f71e7f4e2b9b96c706307e70c8",
            "6b763b4452e2438aaa0e70d94ddea5c8",
            "3dfa1a90c5204fe5ac7b16173e177d75",
            "1b4114d877274d83ba48e21222a925df",
            "4464c5d0bc5f43499807309181a040b5"
          ]
        },
        "id": "5tLgoNi7f2YM",
        "outputId": "06c16e60-ca44-4202-b424-d12524c67c9d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "5cd9c849393b46dca4c83b293b1df5bc",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(IntSlider(value=2, description='bianche', max=5, min=1), IntSlider(value=3, description=…"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Caso interessante:\n",
        "\n",
        "Nel caso di una sola pallina rossa ed _n_ palline bianche, non si ha un'estrazione in cui è più probabile trovare la rossa, hanno tutte probabilità $\\frac{1}{n+1}$ come si può verificare ri-lanciando l'esperimento precedente con una sola pallina rossa."
      ],
      "metadata": {
        "id": "Y5F358gdvcak"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Esempio 5.2\n",
        "\n",
        "Ripetiamo l'esperimento precedente, ma questa volta rimpiazziamo la pallina ad ogni estrazione. La variabile X diventa numerabile e si ha\n",
        "\n",
        "\\begin{equation}\n",
        "  px(k) =\n",
        "    \\begin{cases}\n",
        "          (\\frac{2}{5})^{k-1}\\frac{3}{5} \\ se \\ k=1,2,3,...\n",
        "          \\\\\n",
        "          0 \\ altrimenti\n",
        "        \\end{cases}\n",
        "\\end{equation}\n",
        "\n",
        "Infatti richiedere X = k vuol dire aver ottenuto k − 1 insuccessi nei primi k − 1 tenativi (ognuno con probabilità $\\frac{2}{5}$) per poi finalmente ottenere un successo al k-esimo tentativo (con probabilità $\\frac{3}{5}$)"
      ],
      "metadata": {
        "id": "DPSi8KkVKH60"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "@interact_manual(bianche=(1,5), rosse=(1, 5))\n",
        "def es52(bianche=2, rosse=3):\n",
        "  palle = mk_urna(bianche, rosse)\n",
        "  results = []\n",
        "  count=0\n",
        "  while(len(results) < precisione):\n",
        "    done = len(results)\n",
        "    tmp = palle\n",
        "    while(len(results) == done):\n",
        "      extr = np.random.randint(0, (bianche+rosse))\n",
        "      if(tmp[extr]):\n",
        "        results.append(count)\n",
        "        count=0\n",
        "      else:  \n",
        "        count = count + 1\n",
        "  \n",
        "  #grafico risultati\n",
        "  labels = []\n",
        "  normalized = []\n",
        "  for i in range(len(set(results))): \n",
        "    normalized.append(round(((results.count(i) / precisione) * 100), 2))\n",
        "  for i in range(len(set(results))):\n",
        "    labels.append(str(i+1))\n",
        "  \n",
        "  #grafico teorico\n",
        "  teoria = []\n",
        "  for i in range(len(set(results))):\n",
        "    teoria.append(((bianche / (bianche + rosse))**(i)) * (rosse / (bianche + rosse)) * 100)\n",
        "\n",
        "  lab_arr = np.arange(len(labels))\n",
        "\n",
        "  w=0.4\n",
        "  plt.bar(lab_arr-(w/2), normalized, width=w)\n",
        "  plt.bar(lab_arr+(w/2), teoria, width=w)\n",
        "  plt.ylabel(\"Percentage\")\n",
        "  plt.xlabel(\"K\")\n",
        "  legenda = [\"Risultati ottenuti\", \"Risultati attesi\"]\n",
        "  plt.legend(legenda,loc='upper center', bbox_to_anchor=(0.5, -0.05), fancybox=True, shadow=True, ncol=5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 113,
          "referenced_widgets": [
            "b16064104c9c4529893e0c670dfeacc1",
            "775714494a6b4efa81569bebacd82e47",
            "dc714e5d07894e2e98f637f3223bc8dc",
            "8a5e92ae4a1a4aedb6ae3644aac9574b",
            "02bf888329c94c1a8485e6e8d438c7df",
            "43fa7aba0395462b9fa61badc53c90ba",
            "d339d64fc56c41e3a9635dc8fcdfbeba",
            "d662651f032f4b7685a2c21efde69e8c",
            "c9dcafe83db04d0fb45d11fd722ccd9c",
            "efe863a88342473ba6ed8c3f6b47ed25",
            "c7a4f8b8ac474a98a33e26f66612e18b",
            "b90be60454394f5f84a120b55e9a41e4",
            "853ae0d20475416484ae4ac7d497b663"
          ]
        },
        "id": "p-e8XTgnsSgC",
        "outputId": "a82718d2-bd98-4466-cf0d-05155b217b4f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "b16064104c9c4529893e0c670dfeacc1",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(IntSlider(value=2, description='bianche', max=5, min=1), IntSlider(value=3, description=…"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Quello appena visto è un esempio di _densità geometrica modificata_ che scriveremo come T ∼ Ḡ(_p_).\n",
        "\n",
        "Quando si parla di densità geometrica modificata? \n",
        "\n",
        "Si consideri uno schema successo-insuccesso con ripetizioni e prendiamo in esame la variabile T data dal tempo di primo successo. \n",
        "Se chiamiamo _Xi_ le variabili _B_(1, _p_) date da _Xi_ = 1 se l’i-esimo tentativo dà successo e _Xi_  = 0 altrimenti abbiamo come densità\n",
        "\n",
        "\\begin{equation}\n",
        "  px(k) =\n",
        "    \\begin{cases}\n",
        "          p(1-p)^{k-1} \\ se \\ k=1,2,3,...\n",
        "          \\\\\n",
        "          0 \\ altrimenti\n",
        "        \\end{cases}\n",
        "\\end{equation}"
      ],
      "metadata": {
        "id": "u9PHD5qa-xdK"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Esempio 5.3\n",
        "\n",
        "Si lancino simultaneamente due dadi, uno rosso e uno blu. Ripetiamo questo\n",
        "esperimento finchè non otteniamo due 6. \n",
        "\n",
        "Poniamo X = primo lancio in cui il dado rosso ha dato 6,\n",
        "Y = primo lancio in cui il dado blu ha dato 6.\n",
        "\n",
        "\n",
        "Determinare inoltre la probabilità di ottenere 6 con il dado rosso prima di ottenere 6 con il dado blu.\n",
        "\n",
        "Abbiamo\n",
        "\n",
        "\\begin{equation}\n",
        "  1 = P(X < Y) + P(X > Y) + P(X = Y)\n",
        "\\end{equation}\n",
        "\n",
        "\\\\\n",
        "e chiaramente per simmetria del problema _P_(_X_ < _Y_) = _P_(_X_ > _Y_) da cui\n",
        "\n",
        "\\\\\n",
        "\n",
        "\\begin{equation}\n",
        "  P(X < Y)= \\frac {1-P(X = Y)}{2}\n",
        "\\end{equation}\n",
        "\n",
        "Ci basterà calcolare quindi _P_(_X_ =_Y_):\n",
        "\n",
        "\\\\\n",
        "\n",
        "\\begin{equation}\n",
        "  P(X = Y) = \\sum_{k=1}^\\infty P(X = Y = k) = \\sum_{k=1}^\\infty (\\frac{25}{36})^{k-1}·\\frac{1}{36} = \\frac{1}{1-\\frac{25}{36}}·\\frac{1}{36} = \\frac{1}{11}\n",
        "\\end{equation}\n",
        "\n",
        "\n",
        "dove abbiamo ancora utilizzato la somma di una serie geometrica, e quindi\n",
        "\n",
        "\\\\\n",
        "\n",
        "\\begin{equation}\n",
        "  P(X < Y) = \\frac{5}{11}\n",
        "\\end{equation}\n"
      ],
      "metadata": {
        "id": "yQRcoTTQmPxD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def es53():\n",
        "  num = 6\n",
        "  results = []\n",
        "  for i in range(precisione):\n",
        "    a, b = 0, 0\n",
        "    while a != num and b != num:\n",
        "      a, b = trow(), trow() \n",
        "      if a == num:\n",
        "        if b == num:\n",
        "          results.append(0)\n",
        "        else:\n",
        "          results.append(1)\n",
        "      if b == num:\n",
        "        results.append(2)  \n",
        "  #grafico\n",
        "  labels = []\n",
        "  normalized = []\n",
        "  myexplode = [0, 0.2, 0]\n",
        "  for i in range(len(set(results)) - 1): #len(set(n)) torna il numero di risultati distinti presenti in results\n",
        "    normalized.append(round(((results.count(i) / precisione) * 100), 2)) #conto le istanze dei risultati e le normalizzo\n",
        "  normalized.append(round(100 - sum(normalized), 2)) #per evitare che per errori di arrotondamento la somma dei risultati sia 99.9%, l'ultimo risultato lo calcolo come 100 - (la somma dei precedenti)\n",
        "  for i in range(len(normalized)):\n",
        "    labels.append(str(normalized[i]) + \"%\") # aggiungo le labels (i valori riportati all'esterno del grafico)\n",
        "\n",
        "  teoria = [1/11, 5/11, 5/11]\n",
        "  lab_teoria = [\"9.09%\", \"45.45%\", \"45.45%\"]\n",
        "\n",
        "  f, (ax1, ax2) = plt.subplots(1, 2)\n",
        "  ax1.pie(normalized, labels=labels,explode=myexplode, colors=[\"green\", \"red\", \"blue\"], shadow=True)\n",
        "  ax1.set_title(\"Risultati ottenuti\")\n",
        "  ax2.pie(teoria, labels=lab_teoria,explode=myexplode, colors=[\"green\", \"red\", \"blue\"], shadow=True)\n",
        "  ax2.set_title(\"Risultati attesi\")\n",
        "  \n",
        "  legenda = [\"X=Y\", \"X<Y\", \"X>Y\"]\n",
        "  ax1.legend(legenda,loc='upper left', bbox_to_anchor=(0.5, -0.05), fancybox=True, shadow=True, ncol=5)\n",
        "\n",
        "es53()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 230
        },
        "id": "6P-rc7pzfODB",
        "outputId": "ef2b4233-9cac-4e45-ab24-936da1c68b84"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Densità di Poisson"
      ],
      "metadata": {
        "id": "hPfoVQ4tzLLR"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Se consideriamo una variabile binomiale _X_ ∼ _B_(_n_, _p_) in cui il numero _n_ di tentativi è molto grande e il parametro _p_ molto piccolo fare i conti con la densità binomiale risulta essere computazionalmente dispendioso. \n",
        "\n",
        "Facciamo un esempio:"
      ],
      "metadata": {
        "id": "7WQ9L3IXzNQo"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Esempio 6.1\n",
        "\n",
        "Supponiamo che in una città nascano 10 000 bambini ogni anno e che ci\n",
        "sia una malattia rara che colpisce un bambino su 2 mila. Qual è la probabilità che quest’anno nascano più di 5 bambini affetti da questa malattia? \n",
        "\n",
        "La variabile _X_ = ”numero di bambini nati con questa malattia quest’anno” è una variabile binomiale _X_ = _B_($10^4$, $\\frac{1}{2000}$). Tuttavia se\n",
        "proviamo ad effettuare il calcolo _P_(_X_ > 5), anche se abbiamo una formula esatta per effettuarlo, è inevitabilmente molto complesso.\n"
      ],
      "metadata": {
        "id": "VD0JenT7zaOx"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Per risolvere questo tipo di problema introduciamo la seguente\n",
        "\n",
        "\\\\\n",
        "\\begin{equation}\n",
        "  p(k) =\n",
        "    \\begin{cases}\n",
        "          e^{-λ} \\frac{λ^k}{k!} \\ se \\ k=0,1,2,...\n",
        "          \\\\\n",
        "          0 \\ altrimenti\n",
        "        \\end{cases}\n",
        "\\end{equation}\n",
        "\n",
        "\\\\\n",
        "\n",
        "dove λ è un parametro reale strettamente positivo."
      ],
      "metadata": {
        "id": "-07DvPlK0SRP"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Nel nostro esempio possiamo pensare alla variabile _X_ come ad una variabile di Poisson di parametro 5. \n",
        "\n",
        "Otteniamo:\n",
        "\n",
        "\\begin{equation}\n",
        "  P(X > 5) = 1 − P(X = 0) − P(X = 1) − P(X = 2) − P(X = 3) − P(X = 4) \n",
        "  \\\\\n",
        "  = 1 − e^{−5}(1 + 5 + \\frac{25}{2} + \\frac{125}{6} + \\frac{625}{24} + \\frac{3125}{120}) = 0, 384.\n",
        "\\end{equation}"
      ],
      "metadata": {
        "id": "fHA5WLXr2VKr"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Nella simulazione riportata sono simulati 100 anni, ripetendo l'esperimento si aggiungono i risultati dei test successivi e si può osservare come il grafico dei risultati ottenuti si avvicini a quello dei risultati attesi."
      ],
      "metadata": {
        "id": "aQ3YUomoewtG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "res_poisson = []"
      ],
      "metadata": {
        "id": "niF9fNy-AGHk"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def es61():\n",
        "  bambini = 10_000\n",
        "  malattia = 2_000\n",
        "  for i in range(100):\n",
        "    count = 0\n",
        "    for i in range(bambini):\n",
        "      if np.random.randint(malattia) == 1:\n",
        "        count = count + 1\n",
        "    res_poisson.append(count)\n",
        "\n",
        "  #grafico risultati\n",
        "  labels = []\n",
        "  set_res = list(set(res_poisson))\n",
        "  normalized = []\n",
        "  for i in set_res: \n",
        "    normalized.append(round(((res_poisson.count(i) / len(res_poisson)) * 100), 2))\n",
        "    labels.append(str(i+1)) \n",
        " \n",
        "  #grafico teorico\n",
        "  teoria = []\n",
        "  lam = bambini / malattia\n",
        "  for i in set_res:\n",
        "    teoria.append((math.e**-lam)*((lam**i)/math.factorial(i)) * 100)\n",
        "\n",
        "  lab_arr = np.arange(len(labels))\n",
        "\n",
        "  w=0.4\n",
        "  plt.bar(lab_arr-(w/2), normalized, width=w)\n",
        "  plt.bar(lab_arr+(w/2), teoria, width=w)\n",
        "\n",
        "  legenda = [\"Risultati ottenuti\", \"Risultati attesi\"]\n",
        "  plt.legend(legenda,loc='upper center', bbox_to_anchor=(0.5, -0.05), fancybox=True, shadow=True, ncol=5)\n",
        "  print(\"Anni simulati: \" + str(len(res_poisson)))"
      ],
      "metadata": {
        "id": "L8XSvxDZMGZe"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "es61()"
      ],
      "metadata": {
        "id": "H4CjxxyZ7Rxc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 299
        },
        "outputId": "1eb54b58-b99b-4809-cb75-77b454d6f38d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Anni simulati: 100\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Densità continua uniforme"
      ],
      "metadata": {
        "id": "2HvnAmIq9-iV"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "La variabile continua più semplice da studiare è quella che può assumere solo valori in un certo intervallo limitato e in modo ”uniforme”."
      ],
      "metadata": {
        "id": "q-CPgnYeAXnr"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Esempio 7.1\n",
        "\n",
        "Un autobus passa da una fermata ogni 10 minuti. Noi arriviamo alla fermata in un momento casuale, chiamiamo T la variabile del tempo d'attesa che assume valori tra 0 e 10 minuti. Mediamente, quanto dovrò aspettare?\n",
        "\n",
        "Iniziamo prendendo l'autobus un po' di volte tenendo uno storico dei tempi di attesa:"
      ],
      "metadata": {
        "id": "AFabxKb1Ar4F"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "uniforme = []\n",
        "tempo = 10\n",
        "for i in range(precisione):\n",
        "  uniforme.append(random.uniform(0, tempo))"
      ],
      "metadata": {
        "id": "A4ckSSdzDloY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#funzione che calcola il valore di x in ogni punto (densità continua uniforme)\n",
        "def densita(x, a, b):\n",
        "  res = []\n",
        "  for i in x:\n",
        "    if i < a:\n",
        "      res.append(0)\n",
        "    elif i > b:\n",
        "      res.append(0)\n",
        "    else:\n",
        "      res.append(1 / (b - a))\n",
        "  return res"
      ],
      "metadata": {
        "id": "G_5JWNvfHgIA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "E mettiamo a grafico i risultati ottenuti"
      ],
      "metadata": {
        "id": "LfkzQQAmE_XV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def es71():\n",
        "  points = (tempo + 2) * 10\n",
        "  \n",
        "  x = np.linspace(-1, tempo+1, points)\n",
        "\n",
        "  coord = []\n",
        "  for i in range(points):\n",
        "    count = 0\n",
        "    for item in uniforme:\n",
        "      if (item > -1 + (((tempo+2)/points)*i) and item <= -1 + (((tempo+2)/points)*(i+1))):\n",
        "        count = count + 1\n",
        "    coord.append((count / precisione) * (points / (tempo + 2)))\n",
        "  \n",
        "  p1 = plt.figure(1)\n",
        "  ax = plt.axes()\n",
        "  ax.plot(x, densita(x, 0, tempo))\n",
        "  ax.set_title(\"Risultati attesi\")\n",
        "  p1.show()\n",
        "  p2 = plt.figure(2)\n",
        "  ax = plt.axes()\n",
        "  ax.plot(x, coord)\n",
        "  ax.set_title(\"Risultati ottenuti\")\n",
        "  p2.show() \n",
        "  p3 = plt.figure(2)\n",
        "  sns.displot(uniforme, kind=\"ecdf\").set(title=\"Ripartizione\")\n",
        "  p3.show() \n",
        "es71()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 909
        },
        "id": "E_CdpJ9ENKE3",
        "outputId": "cef60e01-214b-4680-be25-d43b076a96c0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Per quanto riguarda la soluzione il valore atteso invece ci basta sapere che il valore atteso di una variabile uniforme è il punto medio dell'intervallo: 5 minuti."
      ],
      "metadata": {
        "id": "CO8fDJK3MDBv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "@interact_manual(tempo=(1, 20))\n",
        "def es71(tempo = 10):\n",
        "  results = []\n",
        "  for i in range(precisione):\n",
        "    results.append(random.uniform(0, tempo))\n",
        "  return round(np.mean(results), 2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81,
          "referenced_widgets": [
            "621594cb313e4de0b6ba4762ba6bdb3b",
            "4594945f071344a0aaaf5c20e82f34cf",
            "5b989eb39ac04d2da3ffbc5b424d7217",
            "2db3fd1e6a644986b842f8eb62a93c43",
            "3282b8ecf91e4d11a4574e811bedbed7",
            "d70df5aa55d24a50ab63957ba59213c4",
            "4787eddb6e66466fb0ec49cb08172618",
            "f254902c6e394ad4875c5eccdc6a7e55",
            "e61c2dea953146cdba885296112482f6",
            "ef4a7bf5becc4713877e7c581c132856"
          ]
        },
        "id": "jG0a0YfTMiZi",
        "outputId": "4137f68e-7462-43b0-caeb-299d27241d92"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "621594cb313e4de0b6ba4762ba6bdb3b",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(IntSlider(value=10, description='tempo', max=20, min=1), Button(description='Run Interac…"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Esercizio 7.2"
      ],
      "metadata": {
        "id": "suJKbVomvlw2"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Continuiamo con l'esempio del bus ma questa volta ci interessa sapere la probabilità che arrivi in un certo intervallo di tempo"
      ],
      "metadata": {
        "id": "Fr271Olzv2DY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "@interact_manual(a=(0, 10), b=(0, 10))\n",
        "def es72(a = 4, b = 6):\n",
        "  if a > b:\n",
        "    return (\"Intervallo non valido\")\n",
        "\n",
        "  unif1 = [x for x in uniforme if x >= a and x <= b]\n",
        "  \n",
        "  points = (tempo + 2) * 10\n",
        "\n",
        "  x = np.linspace(-1, tempo+1, points)\n",
        "\n",
        "  coord = []\n",
        "  for i in range(points):\n",
        "    count = 0\n",
        "    for item in uniforme:\n",
        "      if (item > -1 + (((tempo+2)/points)*i) and item <= -1 + (((tempo+2)/points)*(i+1))):\n",
        "        count = count + 1\n",
        "    coord.append((count / precisione) * (points / (tempo + 2)))\n",
        "\n",
        "  coord2 = []\n",
        "  for i in range(points):\n",
        "    count = 0\n",
        "    for item in unif1:\n",
        "      if (item > -1 + (((tempo+2)/points)*i) and item <= -1 + (((tempo+2)/points)*(i+1))):\n",
        "        count = count + 1\n",
        "    coord2.append((count / precisione) * (points / (tempo + 2)))\n",
        "\n",
        "  plt.plot(x, coord)\n",
        "  plt.fill_betweenx(coord2, x, alpha=0.30)\n",
        "  \n",
        "  ris1 = round((b-a) / tempo, 3)\n",
        "  print(\"Risultati attesi: \" + str(ris1))\n",
        "  ris2 = round(len(unif1) / precisione, 3)\n",
        "  print(\"Risultati ottenuti: \" + str(ris2))"
      ],
      "metadata": {
        "id": "0Gfo7zOovTuG",
        "outputId": "40f072a4-9d02-49b7-c7db-741f8a6ac3a6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 113,
          "referenced_widgets": [
            "de083b68b9274b69a194d3edcc88a122",
            "81944e13df8247bcadf8b5cea5af221a",
            "95da5292bded46edb8a7592328a8c4e8",
            "c3ec75e26016432b846c142d1177c054",
            "cf0fbd2e318f40ce8750227f07ba3d30",
            "2e373db39ad04519b40e3199cf02ae2c",
            "df6b4e57eb4b42f19435c82f8530e66d",
            "8514b881c1034637bac5d5c452f16f3d",
            "3fa0590087394ad19d2eff2a29d55103",
            "01ca3400da6a49439fea422e55497d88",
            "6960fa999ca04098873bc7443dc2a20e",
            "73631ba144ff41c2b0e2b6f9162df91a",
            "ac1fa75b102b45288fd6b0835fdb3e42"
          ]
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "de083b68b9274b69a194d3edcc88a122",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(IntSlider(value=4, description='a', max=10), IntSlider(value=6, description='b', max=10)…"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Densità continua esponenziale"
      ],
      "metadata": {
        "id": "KzWvYabHHMQp"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Fissiamo un parametro _λ_ e ricordiamo che una primitiva della funzione $e^{−λt}$ è data da -$\\frac{1}{λ}e^{−λt}$ da cui abbiamo che:\n",
        "\n",
        "\\begin{equation}\n",
        "  \\int_{0}^{+ \\infty} e^{-λt} \\,dt = \\frac{1}{λ} \n",
        "\\end{equation}\n",
        "\n",
        "Proposizione:\n",
        "\n",
        "\\begin{equation}\n",
        "  f(s) =\n",
        "    \\begin{cases}\n",
        "          λ e^{-λs} \\ se \\ s \\geq 0\n",
        "          \\\\\n",
        "          0 \\ altrimenti\n",
        "        \\end{cases}\n",
        "\\end{equation}\n",
        "\n",
        "dove _λ_ è un parametro positivo con densità continua astratta.\n",
        "\n",
        "Una variabile _X_ che ammette tale densità si dice esponenziale di parametro _λ_ e scriveremo _X_ ∼ Exp(_λ_). Lo stesso calcolo mostra che la funzione di ripartizione di una variabile _X_ ∼ Exp(_λ_) è data da\n",
        "\n",
        "\\begin{equation}\n",
        "  Fx(t) =\n",
        "    \\begin{cases}\n",
        "          1-e^{-λt} \\ se \\ t \\ge 0\n",
        "          \\\\\n",
        "          0 \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ se \\ t \\le 0\n",
        "        \\end{cases}\n",
        "\\end{equation}"
      ],
      "metadata": {
        "id": "kDn_33f8UA9S"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Esempio 8.1\n",
        "\n",
        "Il decadimento di una particella radioattiva segue una legge esponenziale di parametro λ = 1 (in giorni).\n",
        "\n",
        "Qual è la probabilità che dopo 3 ore sia già decaduta?"
      ],
      "metadata": {
        "id": "vdltBTAzbjNQ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Usando un cambio di variabile simuliamo un set di valori di una variabile esponenziale con parametro _λ_ = 1 "
      ],
      "metadata": {
        "id": "KXHsGg67--dB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "exp = []\n",
        "for i in range(precisione):\n",
        "  exp.append(-math.log(random.uniform(0, 1)))"
      ],
      "metadata": {
        "id": "GrAEx7n-2V-2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "E ne grafichiamo la densità e la partizione "
      ],
      "metadata": {
        "id": "xP2yQ4p9ACry"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def exp_plot():\n",
        "  points = 130\n",
        "  space = 6\n",
        "\n",
        "  x = np.linspace(-1, space - 1, points)\n",
        "\n",
        "  coord = []\n",
        "  for i in range(points):\n",
        "    count = 0\n",
        "    for item in exp:\n",
        "      if (item > -1 + (((space)/points)*i) and item <= -1 + (((space)/points)*(i+1))):\n",
        "        count = count + 1\n",
        "    coord.append((count / precisione) * (points / (space)))\n",
        "  \n",
        "  sns.displot(exp, kind=\"ecdf\")\n",
        "  plt.plot(x, coord)\n",
        "  plt.xlim(-1, 4)\n",
        "  plt.title(\"Densità e ripartizione della variabile in esame\")\n",
        "\n",
        "  legenda = [\"Funzione di ripartizione\", \"Densità\"]\n",
        "  plt.legend(legenda,loc='upper center', bbox_to_anchor=(0.5, -0.05), fancybox=True, shadow=True, ncol=5)\n",
        "\n",
        "exp_plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 403
        },
        "id": "o6Bmu5FDMOPV",
        "outputId": "43e1527e-3046-4838-8190-4502d82bcd21"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Tornando alla domanda iniziale, contiamo quante volte abbiamo ottenuto un tempo minore di 3 ore e confrontiamolo coi risultati attesi dalla teoria."
      ],
      "metadata": {
        "id": "MrVxuxXhB-Dh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "@interact_manual(ore=(0, 72))\n",
        "def es81(ore = 3):\n",
        "  count = 0\n",
        "  for item in exp:\n",
        "    if (item * 24) <= ore:\n",
        "      count = count + 1\n",
        "  print(\"Risultati ottenuti: \" + str(round(count / precisione, 3)))\n",
        "  res = 1 - (math.e**(-1 * (ore / 24)))\n",
        "  print(\"Risultati attesi: \" + str(round(res, 3)))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81,
          "referenced_widgets": [
            "ba23929aab66493bba31479f2c9e45c5",
            "3c44bd67b4a14271bc4ee746dfd37d3c",
            "dd3e885254984ee889c88dc06d7dcfb7",
            "754d1579987a4ea4b24c467cf69e2e87",
            "32cecd69a80d411288d1a1d2609a12e6",
            "d0691838260748338a97ab40e5aa5066",
            "b1f1030057c34f6cb522fefa3bac66a2",
            "8cfa600922a84cb8837dbbf174174211",
            "ea56761c23bc447a9ea143a2801e7fe0",
            "78055100663d4f098caa0ff207cf9c5b"
          ]
        },
        "id": "-nLD7XugV7iy",
        "outputId": "3733bfe0-6172-46c2-c3bd-da18cb33db30"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ba23929aab66493bba31479f2c9e45c5",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(IntSlider(value=3, description='ore', max=72), Button(description='Run Interact', style=…"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Fin'ora abbiamo visto variabili esponenziali aventi _λ_ = 1, il caso base. Vediamo ora lo stesso esempio ma questa volta il tempo di decadimento della particella è segue una legge esponenziale di parametro _λ_ ≠ 1.\n",
        "\n",
        "Iniziamo vedendone il grafico della densità:"
      ],
      "metadata": {
        "id": "z8484TUNFyqT"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "@interact_manual(λ=(2, 10))\n",
        "def exp_test(λ=2):\n",
        "  lamb = λ\n",
        "\n",
        "  test = []\n",
        "  for i in range(precisione):\n",
        "    test.append((-1/(lamb))*math.log(random.uniform(0, 1)))\n",
        "\n",
        "  b = max(test)/3\n",
        "  a = -b/10\n",
        "  points = 100\n",
        "  x = np.linspace(a, b, points)\n",
        "\n",
        "  coord = []\n",
        "  for i in range(points):\n",
        "    count = 0\n",
        "    for item in test:\n",
        "      if (item > a + (((abs(a) + b)/points)*i)) and (item <= a + (((abs(a) + b)/points)*(i+1))):\n",
        "        count = count + 1\n",
        "    coord.append((count / precisione) * (points / (abs(a) + b)))\n",
        "\n",
        "  plt.plot(x, coord)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81,
          "referenced_widgets": [
            "306631d8a9c44d559977201470d7475e",
            "c1014ce42e704d29aff475d9aa418f0d",
            "f5136a9464fd4411a8aac73afc8a8f40",
            "ce30316309a04dcd8abe98e33cbf7736",
            "e793e4d2ce6f48b0b7ce41807b584398",
            "75633f24ff094269a1e2039e7dc8df71",
            "6f0c8302fff540e7a682b7db41e9f071",
            "b69d604e4ce748edb46a55f78f29810a",
            "d00dae849be9481283628189adce8666",
            "a44be094fc0e433db7f6002d0a7ecfe1"
          ]
        },
        "id": "irnlB3MXGPPl",
        "outputId": "04e964c1-f53f-4810-ffc0-9c3ff88acd84"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "306631d8a9c44d559977201470d7475e",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(IntSlider(value=2, description='λ', max=10, min=2), Button(description='Run Interact', s…"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "E confrontiamo i risultati che abbiamo ottenuto con quelli attesi dalla teoria:"
      ],
      "metadata": {
        "id": "ySU20jIY7tkY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "@interact_manual(ore=(0, 72), λ=(2, 10))\n",
        "def exp_particella(ore = 10, λ = 2):\n",
        "  test = []\n",
        "  for i in range(precisione):\n",
        "    test.append((-1/λ)*math.log(random.uniform(0, 1)))\n",
        "  count = 0\n",
        "  for item in test:\n",
        "    if (item * 24) <= ore:\n",
        "      count = count + 1\n",
        "  print(\"Risultati ottenuti: \" + str(round(count / precisione, 3)))\n",
        "  res = 1 - (math.e**(-(λ * (ore / 24))))\n",
        "  print(\"Risultati attesi: \" + str(round(res, 3)))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 113,
          "referenced_widgets": [
            "5b6b1c7b25cf4e52b99a2768bf3248bd",
            "966b161212344c0cafb004dffc9eb368",
            "6310c9d7be50470688eb67aaa71906d2",
            "e72cc87bdd1d4687a6237bc4dece72e0",
            "d220790c90a845fc813a4a63857c3708",
            "26bdcbef465e4e70b8d6964959761097",
            "a8190a73fa974e858f1f2b5907a8e882",
            "620a78ccc0744611b1ad3834f0dc1ecd",
            "fac492521ee04879b6ae003aa1d98168",
            "a427e1c349f74e3ebe015cac9f4be639",
            "9f260e269f1b48e5bfacb5cbff8cb70f",
            "5a036c5c080945f5b0e462031ca78b62",
            "a71169563dcf4700b67c828ab88b8465"
          ]
        },
        "id": "lew-nKK9KlQ0",
        "outputId": "b31daec0-d2c8-4d61-92a9-e30f24dfc28c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "5b6b1c7b25cf4e52b99a2768bf3248bd",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(IntSlider(value=10, description='ore', max=72), IntSlider(value=2, description='λ', max=…"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Esercizio 8.2"
      ],
      "metadata": {
        "id": "QdEbzDc5JVI8"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Continuiamo con l'esempio della particella ma questa volta ci interessa sapere la probabilità decada in un certo intervallo di tempo"
      ],
      "metadata": {
        "id": "sxmUgXSeJcYJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "@interact_manual(t1=(0, 96), t2=(0, 96))\n",
        "def es82(t1=3, t2=10):\n",
        "  if t1 > t2:\n",
        "    return (\"Intervallo non valido\")\n",
        "  \n",
        "  points = 325\n",
        "  tempo = 4.5\n",
        "  a = -0.5\n",
        "\n",
        "  x = np.linspace(a, tempo + a, points)\n",
        "  \n",
        "  exp1 = []\n",
        "  for i in range(precisione):\n",
        "    exp1.append(-math.log(random.uniform(0, 1)))\n",
        "\n",
        "  exp2 = [x for x in exp1 if x >= t1/24 and x <= t2/24]\n",
        "\n",
        "  coord = [0]\n",
        "  for i in range(points-1):\n",
        "    count = 0\n",
        "    for item in exp1:\n",
        "      if (item > a + (((tempo)/(points-1))*i) and item <= a + (((tempo)/(points-1))*(i+1))):\n",
        "        count = count + 1\n",
        "    coord.append((count / precisione) * ((points-1) / (tempo)))\n",
        "  \n",
        "  y = np.minimum(bounds(x, t1/24, t2/24), coord)\n",
        "  \n",
        "  ris1 = round((1 - (math.e**(-(t2 / 24)))) - (1 - (math.e**(-(t1 / 24)))), 3)\n",
        "  print(\"Risultati attesi: \" + str(ris1))\n",
        "  ris2 = round(len(exp2) / precisione, 3)\n",
        "  print(\"Risultati ottenuti: \" + str(ris2))\n",
        "\n",
        "  plt.plot(x, coord)\n",
        "  plt.fill_between(x, y, alpha=0.30)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 113,
          "referenced_widgets": [
            "ab666a98e236491b92bb4dca8401e7c5",
            "d7fa3f2a19ca45689affdcd31365ac3b",
            "7ff4761a04ff4f5cbbdec1bac1c4ac32",
            "01d3b5d2bb6d440b80b56e9f8b140178",
            "0280e4b7e34d43b4bc8916301beb179b",
            "0f21792cef564d368ab04551338f7981",
            "e9f66e3e3c3a4be5b39dbc90b234edb6",
            "352728479bc94c66b4c24088cb275404",
            "0d054ecb847a4b51b2bf0c3f9042cd7a",
            "5a288e16eff84f5c908ff08390b0b7ec",
            "38209283f2544e0f975e6b888614bfd2",
            "2df160a0cdb542fa8a95b3ac6150f45e",
            "e7ef3467e4454d78905c007da91915d6"
          ]
        },
        "id": "9jzvi4tr12nU",
        "outputId": "197c2a82-8b7b-4b02-ef74-b17e26709360"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "ab666a98e236491b92bb4dca8401e7c5",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(IntSlider(value=3, description='t1', max=96), IntSlider(value=10, description='t2', max=…"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Densità continua normale"
      ],
      "metadata": {
        "id": "YEVrCLb-MTAW"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Passiamo ora a considerare quelle che sono probabilmente le variabili aleatorie continue più rilevanti.\n",
        "Si può dimostrare (e Gauss lo ha fatto per primo) che\n",
        "\n",
        "\\begin{equation}\n",
        "  \\int_{- \\infty}^{+ \\infty} e^{-{\\frac{x^2}{2}}} \\,dx = \\sqrt{2 \\pi} \n",
        "\\end{equation}\n",
        "\n",
        "Ne segue che la funzione\n",
        "\n",
        "\\begin{equation}\n",
        "  f(s)= \\frac{1}{\\sqrt{2 \\pi}}e^{-{\\frac{x^2}{2}}}\n",
        "\\end{equation}\n",
        "\n",
        "è una densità. Questa densità viene detta normale standard o gaussiana standard e se una variabile _X_ che ammette questa densità scriveremo\n",
        "\n",
        "\\begin{equation} \n",
        "  X ∼ N(0, 1)\n",
        "\\end{equation}"
      ],
      "metadata": {
        "id": "VLVgu8loMhhb"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Il primo parametro è la media, ovvero il valore medio della distribuzione. Il secondo è la deviazione standard.\n",
        "\n",
        "Di seguito vediamo i grafici della funzione di ripartizione e della densità di una normale al variare di media e deviazione standard:"
      ],
      "metadata": {
        "id": "G54eY3HAS3AM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "@interact(mean=(-5, 5), std_dev=(1, 5))\n",
        "def std_norm(mean = 0, std_dev = 1):\n",
        "  a = -10\n",
        "  x = np.linspace(a, abs(a), 100)\n",
        "  dnd = []\n",
        "  for i in x:\n",
        "    dnd.append(scipy.stats.norm(mean, std_dev).pdf(i))\n",
        "  plt.plot(x, dnd)\n",
        "  legenda = [\"Densità\"]\n",
        "  plt.legend(legenda,loc='upper center', bbox_to_anchor=(0.5, -0.05), fancybox=True, shadow=True, ncol=5)"
      ],
      "metadata": {
        "id": "9eK-dNsZTJ3L",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 346,
          "referenced_widgets": [
            "e45ff4c920b84f9faf36c47b11e60e7e",
            "15697f4fe152424e82440b3cc862b165",
            "fbf6fd4075b0434080367f3ab9c444fb",
            "ea0ff469ff6c4926b238d58fe2dfd5ee",
            "c98a9a8e6c25490e9d3d60ecfb02bff6",
            "33ce1d9fc8b34132917a88e3aaa75741",
            "531ef4cc821f41cd99354948e12120e8",
            "bdf1353f1e2d425c9a73d9146f8c0e5c",
            "e6fb2048a6f04220be50e79d6f00deb3",
            "ff79342caec54b20ae44941c44b8282a"
          ]
        },
        "outputId": "8842dc9a-988d-49a2-cb67-a122ee340a0c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "e45ff4c920b84f9faf36c47b11e60e7e",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(IntSlider(value=0, description='mean', max=5, min=-5), IntSlider(value=1, description='s…"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "@interact(mean=(-5, 5), std_dev=(1, 5))\n",
        "def std_norm(mean = 0, std_dev = 1):\n",
        "  a = -10\n",
        "  x = np.linspace(a, abs(a), 100)\n",
        "  pnd = []\n",
        "  for i in x:\n",
        "    pnd.append(scipy.stats.norm(mean, std_dev).cdf(i))\n",
        "  plt.plot(x, pnd)\n",
        "  legenda = [\"Funzione di ripartizione\"]\n",
        "  plt.legend(legenda,loc='upper center', bbox_to_anchor=(0.5, -0.05), fancybox=True, shadow=True, ncol=5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 346,
          "referenced_widgets": [
            "d5bcd8603d82471aa989352d5a0774b7",
            "10841fa5c2124c94bc8683d6eeaf5c24",
            "15e1e524898445b088c13f2e4e97a33c",
            "ee2ec0a9200f45e8bdbf2db386efa57c",
            "387e7e29e0ac4e42bd7faa8083444d8e",
            "ac529579b73c4a56b292b13a00af2f4f",
            "93bdb65b8d47456888a6325b35920a78",
            "017e62323faa48679b17f22a8e769ca3",
            "74f47274ad734c51abb7223f91e34bef",
            "51bb65120c63463e91523cfadfd18b4b"
          ]
        },
        "id": "vZtFsBexR7UQ",
        "outputId": "ea5a950d-24e1-4ab2-ab32-6f8b314c3494"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "d5bcd8603d82471aa989352d5a0774b7",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(IntSlider(value=0, description='mean', max=5, min=-5), IntSlider(value=1, description='s…"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Esempio 9.1"
      ],
      "metadata": {
        "id": "0WalWbwgLNDx"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Sia _X_ una variabile continua normale standard, determinare la probabilità che _X_ assuma un valore minore di 1."
      ],
      "metadata": {
        "id": "NLO8PiezLS_N"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def bounds(x, a, b):\n",
        "  res = []\n",
        "  for i in x:\n",
        "    if i < a:\n",
        "      res.append(0)\n",
        "    elif i > b:\n",
        "      res.append(0)\n",
        "    else:\n",
        "      res.append(1)\n",
        "  return res"
      ],
      "metadata": {
        "id": "Iiln3yhVXChT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "@interact_manual(valore=(-4, 4, 0.1))\n",
        "def es91(valore = 1):\n",
        "  a = -4\n",
        "  points = 401\n",
        "\n",
        "  x = np.linspace(a, abs(a), points)\n",
        "\n",
        "  nd1 = []\n",
        "  for i in range(precisione):\n",
        "    nd1.append(np.random.normal(0, 1))\n",
        "\n",
        "  nd2 = [x for x in nd1 if x <= valore]\n",
        "\n",
        "  coord = [0]\n",
        "  for i in range(points - 1):\n",
        "    count = 0\n",
        "    for item in nd1:\n",
        "      if (item > a + (((-2*a)/points)*i)) and (item <= a + (((-2*a)/points)*(i+1))):\n",
        "        count = count + 1\n",
        "    coord.append((count / precisione) * (points / (-2*a)))\n",
        "  \n",
        "  y = np.minimum(bounds(x, -5, valore), coord)\n",
        "\n",
        "  ris1 = round(scipy.stats.norm(0, 1).cdf(valore), 3)\n",
        "  print(\"Risultati attesi: \" + str(ris1))\n",
        "  ris2 = round(len(nd2) / precisione, 3)\n",
        "  print(\"Risultati ottenuti: \" + str(ris2))\n",
        "\n",
        "  plt.fill_between(x, y, alpha=0.30)\n",
        "  plt.plot(x, coord)"
      ],
      "metadata": {
        "id": "0YLBeVSIL9qG",
        "outputId": "4c011c63-d953-4841-a67c-1b215976d338",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81,
          "referenced_widgets": [
            "2ed9e4133ff94ad7b76897c492e10904",
            "4fbe18ce717340ce844cc545046480f2",
            "db074b92df9e48818794d1d6e30813bc",
            "4cf9f2a7f9054d379db7806b8dd56d34",
            "9e91892ebe414485b1db13b84db3fa09",
            "a241bbf31d444d3b99435c4b1b2dc5be",
            "208c4b16b1d048ae9420bb098334b24c",
            "60c10cc7715a44318271b3d005ebe131",
            "92a39d3c0b044445b2337df6bb94aac8",
            "20f68c1207db448aa2f35fe1a9b3aa4b"
          ]
        }
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "2ed9e4133ff94ad7b76897c492e10904",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(FloatSlider(value=1.0, description='valore', max=4.0, min=-4.0), Button(description='Run…"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Esempio 9.2"
      ],
      "metadata": {
        "id": "twGutUTVPnRX"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Uno studio su 100 000 diciottenni (reclutati dalle scuole e dal Maternal and Child Health Centres ad Hong Kong) ha mostrato che l'altezza di un'adulto ha una densità normale _N_ (172, 5).\n",
        "\n",
        " Una divisa per reclute è disponibile in 4 taglie:\n",
        " \n",
        "Taglia   | Altezza \n",
        "---------|------------------\n",
        "S        | h < 164\n",
        "M        | 164 < h < 172\n",
        "L        | 172 < h < 180\n",
        "XL       | h > 180\n",
        "\n",
        "Dovendo vestire 500 nuove reclute quante divise di ogni taglia comprereste?"
      ],
      "metadata": {
        "id": "edGsbSkpyUup"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Per validare i risultati che calcolati con le formule, li confronteremo con le altezze di 20 000 adulti che hanno partecipato all'esperimento ma le cui altezze non sono state usate per per definire la distribuzione, ma lasciate per validarla."
      ],
      "metadata": {
        "id": "V-0c_kiN1WlJ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data_url = \"https://raw.githubusercontent.com/MontiMic/Tesi/riordinato/train.csv\" #importo il dataset\n",
        "data = pd.read_csv(data_url, sep=',', dtype={})\n",
        "lab = [\"id\", \"height\", \"weight\"]\n",
        "data.columns = [i for i in lab]\n",
        "data = data.drop(['id', 'weight'], axis=1) #scarto i dati riguardanti l'id ed il peso dei soggetti, non ci servono\n",
        "height = []\n",
        "for i in data[\"height\"]: #converto le altezze da pollici in centimetri\n",
        "  height.append(i*2.54)"
      ],
      "metadata": {
        "id": "wEK2CHWylV7L"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "x = np.linspace(151, 190, 40)\n",
        "coord = []\n",
        "for i in range(40):\n",
        "  count = 0\n",
        "  for item in height:\n",
        "    if (item > (151 + i) and item <= (151 + i + 1)):\n",
        "      count = count + 1\n",
        "  coord.append(count / len(height))\n",
        "dnd = []\n",
        "for i in x:\n",
        "  dnd.append(scipy.stats.norm(172, 5).pdf(i))\n",
        "plt.plot(x, dnd)\n",
        "plt.plot(x, coord)\n",
        "legenda = [\"Distribuzione teorica\", \"Distribuzione del campione\"]\n",
        "plt.legend(legenda,loc='upper center', bbox_to_anchor=(0.5, -0.05), fancybox=True, shadow=True, ncol=5)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "1j7e4b-jbImS",
        "outputId": "6d0b648f-8846-4888-f0a4-3545830fc0a8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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zs7mnnvu4U9/+hOZmZnnLTNjxgxKSkqYPn0648ef672ZXbt2cejQIebMmUNgYCBPP/00O3bs4OGHH6asrIwOHTowe/ZsQkNDGTFiBAMGDODHH3+koKCA999/n2HDhmGz2Xj22WdZtWoVlZWVPProozz00EPnbYNnn32WjIwMevXqxejRo3nttdd47bXXWLhwIZWVlUyaNImXXnoJgH/84x/Mnj0bgAcffJAnn3ySzMxMxowZw4ABA0hJSWH58uUMHz6c5ORkIiIimD9/PjNmzEApRc+ePfnggw9YtmwZf/nLX6iqqiI8PJyPPvqIyMjIK/+Pv9DXz8KJXQ33fACte8C4l+u9uLy3HP76178yb948WrVqRZs2bUhKSgIgIyODRx99lLy8PPz9/Xn33Xfp2rVrndvz5MmTPPzwwxw65LiGbNasWQwePJhbbrmFY8eOUVFRwRNPPMH06dMBCAwM5JFHHmH58uVERUXxt7/9jWeeeYajR4/y+uuvM2HCBObOncvixYspLCw8bzuefXxJSQlaa5555hm+/vprlFL84Q9/YMqUKaxatYoXX3yRiIgIdu/eTVJSEh9++CFKKVJSUnjqqacoKSkhIiKCuXPnEhV19f2/uWWhdxXt27fHZrORm3t+54szZsxg5syZDBkyhJKSEnx9fXn55ZfP/bGC4yv0tm3b2LlzJ2FhYWRmZp73HFu2bGH37t34+/vTr18/brzxRiIiaj/uEh0dfW5vcObMmaxevZq4uLjzlrnvvvt44403GD58OC+88AIvvfQSr7/+OuDY69uyZQvLly/npZdeYsWKFbz//vsEBwezdetWKisrGTJkCDfccAPt2rU795wvv/wyu3fvPrfu7777joMHD7Jlyxa01kyYMIE1a9YQEBDAnDlz2Lx5M1prBgwYwPDhwwkNDeXgwYPMmzePgQMHnpc3LS2Nv/zlL2zYsIGIiAhOn3Z0+Dd06FA2bdqEUor33nuPV199lb//3ZW6P2oYzf29lZKSwieffMKOHTuorq6mT58+5wr99OnTefvtt+nUqRObN2/m17/+NStXrqxzW/7mN79h+PDhLF68GJvNRklJCQCzZ88mLCyM8vJy+vXrx2233UZ4eDilpaWMHDmS1157jUmTJvGHP/yB77//nj179jB16lQmTJhQ53as+c3r888/Z8eOHaSmpnLq1Cn69evH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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "@interact_manual(taglia=[\"S\", \"M\", \"L\", \"XL\"])\n",
        "def es92(taglia = \"L\"):\n",
        "  a, b = 0, 0\n",
        "  #purtroppo questa versione di python non supporta gli switch case (nè il match case)\n",
        "  if taglia == \"S\":\n",
        "    a, b = 150, 164\n",
        "  elif taglia == \"M\":\n",
        "    a, b = 164, 172\n",
        "  elif taglia == \"L\":\n",
        "    a, b = 172, 180 \n",
        "  elif taglia == \"XL\":\n",
        "    a, b = 180, 191\n",
        "  \n",
        "  cm = 500\n",
        "  x = np.linspace(151, 200, cm)\n",
        "  \n",
        "  nd1 = []\n",
        "  for i in range(cm):\n",
        "    count = 0\n",
        "    for item in height:\n",
        "      if (item > (151 + i/10) and item <= (151 + i/10 + 1)):\n",
        "        count = count + 1\n",
        "    nd1.append(count / len(height))\n",
        "\n",
        "  nd2 = [x for x in height if x > a and x <= b]\n",
        "  \n",
        "  ris1 = round(scipy.stats.norm(172, 5).cdf(b) - scipy.stats.norm(172, 5).cdf(a), 3)\n",
        "  print(\"Risultati attesi: \" + str(ris1))\n",
        "  ris2 = round(len(nd2) / len(height), 3)\n",
        "  print(\"Risultati ottenuti: \" + str(ris2))\n",
        "\n",
        "  y = np.minimum(bounds(x, a, b), nd1)\n",
        "\n",
        "  plt.plot(x, nd1)\n",
        "  #plt.plot(x, bounds(x, a, b))\n",
        "  #plt.plot(x, y)\n",
        "  plt.fill_between(x, y, alpha=0.30)\n",
        "  plt.xlim(150, 200)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 81,
          "referenced_widgets": [
            "54e167c5d12a4520a982a09a93347301",
            "4cda163dffa643e58d04b8ce26b22daa",
            "daccd65253a4458cbab5b4757c18c226",
            "dced52fecd75425ba8450daec6de4f59",
            "5b6c161fb1c843bcaa1a206da2f278d0",
            "534629ce43b144dcb3fe4a9e1d11cd82",
            "e194c2a1bbfd4710994bc7e5be84a3d2",
            "5f278ef471294d148ffa38483c34c1a7",
            "06286d6a28f94de6b7a67fbdbbde5d08",
            "da56cf7aa2e5491ba2b3aced15b95d96"
          ]
        },
        "id": "j13iOPty-8h8",
        "outputId": "ab8f8283-b97b-43fb-9d58-d4837802babd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.jupyter.widget-view+json": {
              "model_id": "54e167c5d12a4520a982a09a93347301",
              "version_minor": 0,
              "version_major": 2
            },
            "text/plain": [
              "interactive(children=(Dropdown(description='taglia', index=2, options=('S', 'M', 'L', 'XL'), value='L'), Butto…"
            ]
          },
          "metadata": {}
        }
      ]
    }
  ]
}